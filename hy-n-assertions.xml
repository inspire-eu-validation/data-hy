<?xml version="1.0" encoding="UTF-8"?>
<Assertions>
  <TestSuite id="gml32">
    <label>Conformance class "GML documents" (OGC conformance class)</label>
    <description>Verify that the documents conform to the "GML documents" conformance class and pass the OGC CITE test for GML 3.2. This is a placeholder for now until OGC CITE tests can be executed.</description>
    <testObjectType>GML 3.2/3.3 documents</testObjectType>
    <identifier>http://www.opengis.net/doc/IS/GML/3.2#clause2.4</identifier>
    <version>0.1</version>
    <author>interactive instruments GmbH</author>
    <creationDate>2016-05-02</creationDate>
    <lastEditor>interactive instruments GmbH</lastEditor>
    <lastUpdateDate>2016-05-29</lastUpdateDate>
  </TestSuite>
  <TestSuite id="inspire-gml">
    <label>Conformance class "INSPIRE GML encoding rule 3.3"</label>
    <description>Examine the GML documents against the requirements for the GML encoding for spatial data sets in INSPIRE. This only covers application-schema-independent, generic requirements. Requirements related to specific application schemas are part of conformance classes with a dependency on this conformance class.</description>
    <testObjectType>INSPIRE GML documents</testObjectType>
    <dependency ref="gml32"/>
    <identifier>http://inspire.ec.europa.eu/conformance-class/tg/gml/3.3</identifier>
    <version>0.1</version>
    <author>interactive instruments GmbH</author>
    <creationDate>2016-05-02</creationDate>
    <lastEditor>interactive instruments GmbH</lastEditor>
    <lastUpdateDate>2016-05-29</lastUpdateDate>
  </TestSuite>
  <TestCase id="inspire-gml.basic">
    <label>Consistency with the standardization target</label>
    <description>Verify that the documents are consistent with the standardization target, i.e. are XML documents that have a GML feature or GML feature collection as a root element.</description>
    <version>0.1</version>
    <author>interactive instruments GmbH</author>
    <creationDate>2016-05-02</creationDate>
    <lastEditor>interactive instruments GmbH</lastEditor>
    <lastUpdateDate>2016-05-29</lastUpdateDate>
    <requirement ref="gml_2_4"/>
    <requirement ref="d27_rec11"/>
  </TestCase>
  <Assertion enabled="true" id="inspire-gml.basic.root" mode="global" severity="error">
    <label>GML features or GML feature collections</label>
    <description>Check for each XML document that the root element is a GML feature or a GML feature collection.<br/><br/>
For feature collections the following root elements are recognised: 
<li>wfs:FeatureCollection,</li>
<li>gml:FeatureCollection,</li>
<li>base:SpatialDataSet.</li>
Otherwise report incorrectRoot.<br/><br/>
This test is a pre-condition to identify the INSPIRE features in the documents under test.</description>
    <requirement ref="d27_rec11"/>
    <expression>let $filesWithErrors := $db[not(wfs:FeatureCollection or gml:FeatureCollection or base:SpatialDataSet)][position() le $limitErrors]
return
  (local:statistics-info-file($filesWithErrors,1),
  for $file in $filesWithErrors
  order by local:name($file)
  let $root := $file/element()
  return
    local:file-message($file, concat('The root element is not a GML feature and not one of the recognised feature collections ({http://www.opengis.net/wfs/2.0}FeatureCollection, {http://www.opengis.net/gml/3.2}FeatureCollection or {http://inspire.ec.europa.eu/schemas/base/3.3}SpatialDataSet). The name of the root element is ', local-name($root), ' in namespace ', namespace-uri($root),'. It is recommended to use the WFS 2.0 feature collection element in INSPIRE.')))</expression>    
  </Assertion>
  <TestCase id="inspire-gml.char-encoding.utf8">
    <label>Character encoding</label>
    <description>This test ensures that all linguistic text can be encoded consistently and in any language – which in turn simplifies the processing of data.</description>
    <requirement ref="d27_12"/>
    <version>0.1</version>
    <author>interactive instruments GmbH</author>
    <creationDate>2016-05-02</creationDate>
    <lastEditor>interactive instruments GmbH</lastEditor>
    <lastUpdateDate>2016-05-29</lastUpdateDate>
  </TestCase>
  <Assertion enabled="false" id="inspire-gml.char-encoding.utf8" mode="global" severity="error">
    <label>Character encoding is UTF-8</label>
    <description>Verify that the character encoding of each XML document is UTF-8. The use of UTF-8 also aligns with common practice and is the default character encoding for XML documents. This test ensures that all linguistic text can be encoded consistently and in any language – which in turn simplifies the processing of data.<br/><br/>
To test, inspect each XML document. If an XML declaration exists, verify that the encoding attribute has the value "UTF-8" or that the attribute is missing. Otherwise report error notUTF8.<br/><br/>
Currently the test is disabled as the test needs an BaseX extension - the XML declaration is NOT part of the node set in the database.</description>
    <requirement ref="d27_12"/>
    <expression>This test needs a BaseX extension as the XML declaration is NOT part of the node set.</expression>
  </Assertion>
  <TestCase id="inspire-gml.xml-schema">
    <label>XML Schema validity</label>
    <description>Verify that all XML documents validate against their XML schema(s).</description>
    <requirement ref="hy_ir_a3"/>
    <requirement ref="hy_ir_a4_2"/>
    <requirement ref="hy_ir_a4_3"/>
    <requirement ref="hy_ir_a5_2"/>
    <requirement ref="hy_ir_a5_3"/>
    <requirement ref="hy_ir_a6_5"/>
    <requirement ref="hy_ir_a9_1"/>
    <requirement ref="hy_tg_1"/>
    <requirement ref="hy_tg_6"/>
    <requirement ref="gml_2_4"/>
    <version>0.1</version>
    <author>interactive instruments GmbH</author>
    <creationDate>2016-05-02</creationDate>
    <lastEditor>interactive instruments GmbH</lastEditor>
    <lastUpdateDate>2016-05-29</lastUpdateDate>
  </TestCase>
  <Assertion enabled="true" id="inspire-gml.xml-schema.schemaLocation" mode="global" severity="error">
    <label>Attribute xsi:schemaLocation is present</label>
    <description>Verify for each XML document that the root element has an xsi:schemaLocation attribute. Otherwise report noSchemaLocation.</description>
    <requirement ref="hy_ir_a4_2"/>
    <expression>let $filesWithErrors := $db[not(/*/@xsi:schemaLocation)][position() le $limitErrors]
return
  (local:statistics-info-file($filesWithErrors,1),
  for $file in $filesWithErrors
  order by local:name($file)
  return
    local:file-message($file, 'The root element does not have an xsi:schemaLocation attribute. The document cannot be validated. This is an error in the INSPIRE GML encoding. Please correct the process that generates the INSPIRE GML documents.'))</expression>
  </Assertion>
  <Assertion enabled="true" id="inspire-gml.xml-schema.valid" mode="global" severity="error">
    <label>Documents are schema valid</label>
    <description>Verify that each document is schema valid: Validate each document against the schema(s) specified in the xsi:schemaLocation attribute using strict XML schema validation. Otherwise report invalidSchema.</description>
    <requirement ref="hy_ir_a3"/>
    <requirement ref="hy_ir_a4_2"/>
    <requirement ref="hy_ir_a4_3"/>
    <requirement ref="hy_ir_a5_2"/>
    <requirement ref="hy_ir_a5_3"/>
    <requirement ref="hy_ir_a6_5"/>
    <requirement ref="hy_ir_a9_1"/>
    <requirement ref="hy_tg_1"/>
    <requirement ref="hy_tg_6"/>
    <expression>for $file in $db
  let $messages := validate:xsd-info($file)
  let $errors := count($messages)
  return
   if ($errors>0) then
    (
      local:statistics-info-file($file,$errors),
      for $message in $messages
      return
       local:file-message($file, $message)
    )
   else ()</expression>
  </Assertion>
  <TestCase id="inspire-gml.gml-model">
    <label>GML model validity</label>
    <description>Verify that the XML documents meet the requirements of the GML model that are not tested by XML schema validation alone.</description>
    <requirement ref="hy_ir_a3"/>
    <requirement ref="hy_ir_a4_2"/>
    <requirement ref="hy_ir_a4_3"/>
    <requirement ref="hy_ir_a5_2"/>
    <requirement ref="hy_ir_a5_3"/>
    <requirement ref="hy_ir_a6_5"/>
    <requirement ref="hy_ir_a9_1"/>
    <requirement ref="hy_tg_1"/>
    <requirement ref="hy_tg_6"/>
    <requirement ref="gml_2_4"/>
    <version>0.1</version>
    <author>interactive instruments GmbH</author>
    <creationDate>2016-05-02</creationDate>
    <lastEditor>interactive instruments GmbH</lastEditor>
    <lastUpdateDate>2016-05-29</lastUpdateDate>
  </TestCase>
  <Assertion enabled="true" id="inspire-gml.gml-model.basic" mode="global" severity="error">
    <label>Documents are consistent with the GML model</label>
    <description>Verify that all properties are valid according to the GML model: Inspect each property element and verify that it either carries a resolvable reference to an object (@xlink:href) that is is the value of the property, contains one or more object elements as child elements, contains a non-empty text node (whitespace is trimmed before checking for empty text), or an xsi:nil XML attribute with the value 'true' indicating that the property value is not included. Otherwise report emptyValue.<br/><br/>
Strictly, empty string values are valid according to the GML model, but they are not an appropriate value for any of the string-valued attributes in INSPIRE.</description>
    <requirement ref="hy_ir_a4_2"/>
    <requirement ref="gml_2_4"/>
    <expression>let $propertiesWithErrors := $features/*[not(@xlink:href or element() or (text() and string-length(normalize-space(text()))>0) or @xsi:nil eq 'true')][position() le $limitErrors]
let $featuresWithErrors := $propertiesWithErrors/..
return
  (local:statistics-info($featuresWithErrors),
  for $feature in $propertiesWithErrors/..
   let $text := for $property in $feature/*[not(@xlink:href or element() or (text() and string-length(normalize-space(text()))>0) or @xsi:nil eq 'true')]
    order by name($property)
    return 
     name($property)
   return
    local:object-message($feature, concat('The following properties of the feature have an empty value: ',string-join($text,', '),'. While this is valid against the XML schema, this is not valid according to the GML model. Please correct the process that generates the GML documents.')))</expression>
  </Assertion>
  <Assertion enabled="true" id="inspire-gml.gml-model.nilReason" mode="global" severity="error">
    <label>nilReason attributes require xsi:nil='true'</label>
    <description>Ensure that nilReason is only set for properties that are void / nil: Inspect each XML element that represents a feature property and that has a nilReason attribute. Verify that xsi:nil='true' is present in the property element.<br/>
Note that this test currently does not analyse properties of data types or objects embedded in a feature.</description>
    <requirement ref="gml_2_4"/>
    <expression>let $propertiesWithErrors := $features/*[@nilReason and not(@xsi:nil eq 'true')][position() le $limitErrors]
let $featuresWithErrors := $propertiesWithErrors/..
return
  (local:statistics-info($featuresWithErrors),
  for $feature in $propertiesWithErrors/..
   let $text := for $property in $feature/*[@nilReason and not(@xsi:nil eq 'true')]
    order by name($property)
    return 
     name($property)
   return
    local:object-message($feature, concat('The following properties of the feature have a nilReason attribute, but xsi:nil is not set to ''true'': ',string-join($text,', '),'. This is an error in the GML encoding. Please correct the process that generates the GML documents. Typically it was forgotten to add xsi:nil=''true'' to the property element.')))</expression>
  </Assertion>
  <Assertion enabled="true" id="inspire-gml.gml-model.nilReason-value" mode="global" severity="error">
    <label>Value range of nilReason attributes</label>
    <description>Verify that all nilReason values are from the allowed range: Inspect all nilReason values and verify that either the values from the INSPIRE registry or from GML are used. Otherwise report incorrectReason. Valid values are:
<li>'http://inspire.ec.europa.eu/codelist/VoidReasonValue/Unknown'</li>
<li>'http://inspire.ec.europa.eu/codelist/VoidReasonValue/Unpopulated'</li>
<li>'http://inspire.ec.europa.eu/codelist/VoidReasonValue/Withheld'</li>
<li>'unknown'</li>
<li>'other:unpopulated'</li>
<li>'withheld'</li></description>
    <requirement ref="hy_ir_a4_3"/>
    <expression>let $values := ( 'http://inspire.ec.europa.eu/codelist/VoidReasonValue/Unknown', 'http://inspire.ec.europa.eu/codelist/VoidReasonValue/Unpopulated', 'http://inspire.ec.europa.eu/codelist/VoidReasonValue/Withheld', 'unknown', 'other:unpopulated', 'withheld' )
let $propertiesWithErrors := $features/*[@xsi:nil eq 'true' and not(@nilReason =  $values)][position() le $limitErrors]
let $featuresWithErrors := $propertiesWithErrors/..
return
  (local:statistics-info($featuresWithErrors),
  for $feature in $propertiesWithErrors/..
   let $text := for $property in $feature/*[@xsi:nil eq 'true' and not(@nilReason =  $values)]
    order by name($property)
    return 
     concat(name($property),' (value: ''',$property/@nilReason,''')')
   return
    local:object-message($feature, concat('The following properties of the feature have a nil value with an unexpected reason value: ',string-join($text,', '),'. The value should either be a URI from the INSPIRE registry (see http://inspire.ec.europa.eu/codelist/VoidReasonValue) or from the pre-defined GML values (''unknown'', ''other:unpopulated'', or ''withheld''). This is an error in the INSPIRE GML encoding and an error in the process that writes the INSPIRE GML documents.')))</expression>
  </Assertion>
  <TestSuite id="gml-hy-n">
    <label>Conformance class "GML application schema, Hydrography - Network 3.0/4.0"</label>
    <description>Examine the data set against requirements associated with the GML application schema. The current tests cover both the GML application schema versions 3 and 4.<br/><br/>This conformance class has a dependency to the conformance class "INSPIRE GML encoding rule 3.3", which covers the generic GML encoding conformance.</description>
    <testObjectType>INSPIRE GML documents (hy-n features)</testObjectType>
    <dependency ref="inspire-gml"/>
    <identifier>http://inspire.ec.europa.eu/conformance-class/tg/hy-n/4.0</identifier>
    <version>0.1</version>
    <author>interactive instruments GmbH</author>
    <creationDate>2016-05-02</creationDate>
    <lastEditor>interactive instruments GmbH</lastEditor>
    <lastUpdateDate>2016-05-29</lastUpdateDate>
  </TestSuite>
  <TestCase id="gml-hy-n.basic">
    <label>Basic tests for GML application schema Hydrography - Network 3.0/4.0</label>
    <description>Examine the data set to verify that it meets basic conditions for this conformance class.</description>
    <version>0.1</version>
    <author>interactive instruments GmbH</author>
    <creationDate>2016-05-02</creationDate>
    <lastEditor>Clemens Portele</lastEditor>
    <lastUpdateDate>2016-05-29</lastUpdateDate>
  </TestCase>
  <Assertion enabled="true" id="gml-hy-n.basic.exist" mode="global" severity="error">
    <label>Data set contains a Hydro - Network feature</label>
    <description>Verify that the spatial data set contains at least one Hydro - Network feature: Check that the set of features in the spatial data set contains at least one feature of a spatial object type specified in the application schema. Otherwise report noFeature. Note: This needs an BaseX extension to identify also subtypes specified in INSPIRE extensions (i.e. an Xpath function that receives one or more schemas - from the xsi:schemaLocation of the XML document - and a list of GML feature type names as input parameters and identifies the list of instantiable subtypes of those feature types).</description>
    <expression>let $featuresFromAppSchema := ($features[self::hy-n:HydroNode|self::hy-n:WatercourseLink|self::hy-n:WatercourseLinkSequence|self::hy-n:WatercourseSeparatedCrossing],
 $features[self::hy-n3:HydroNode|self::hy-n3:WatercourseLink|self::hy-n3:WatercourseLinkSequence|self::hy-n3:WatercourseSeparatedCrossing]) (: extend with subtypes :)   
return
	if($featuresFromAppSchema) then () else local:global-message('The XML documents representing the spatial data set do not contain a feature of any of the spatial object types in the ''Hydro - Network'' application schema. Therefore, the spatial data set cannot conform to this conformance class. If you have expected to find spatial objects from the application schema in the data set, please consult the statistics information to see the spatial object types that have been found.')</expression>
  </Assertion>
  <TestSuite id="hy-n-as">
    <label>Conformance class "Application schema, Hydrography - Network 3.1"</label>
    <description>Examine the data set against the requirements associated with the application schema.<br/><br/>To be able to test this conformance class, the encoding of the data set must be known, i.e. this is a parameterized conformance class. This test suite assumes that the GML encoding is used and has an indirect dependency to the conformance class "GML application schema for Hydrography - Network 3.0/4.0".</description>
    <testObjectType>spatial data set</testObjectType>
    <dependency type="indirect" ref="gml-hy-n"/>
    <identifier>http://inspire.ec.europa.eu/conformance-class/ir/hy/as/hy-n</identifier>
    <version>0.1</version>
    <author>interactive instruments GmbH</author>
    <creationDate>2016-05-02</creationDate>
    <lastEditor>interactive instruments GmbH</lastEditor>
    <lastUpdateDate>2016-05-29</lastUpdateDate>
  </TestSuite>
  <TestCase id="hy-n-as.schema">
    <label>Schema element denomination</label>
    <description>Verify whether each relevant element of the dataset under inspection carries a name specified in the target application schema: Examine whether the corresponding elements of the source schema (spatial object types, data types, attributes, association roles, code lists, and enumerations) are mapped to the target schema with the correct designation of mnemonic names.</description>
    <requirement ref="hy_ir_a3"/>
    <requirement ref="hy_ir_a4_1"/>
    <requirement ref="hy_ir_a4_2"/>
    <requirement ref="hy_ir_a4_3"/>
    <version>0.1</version>
    <author>interactive instruments GmbH</author>
    <creationDate>2016-05-02</creationDate>
    <lastEditor>interactive instruments GmbH</lastEditor>
    <lastUpdateDate>2016-05-29</lastUpdateDate>
  </TestCase>
  <Assertion enabled="manual" id="hy-n-as.schema.basic" mode="global" severity="error">
    <label>Mapping of elements to the INSPIRE application schema</label>
    <shortDescription></shortDescription>
    <description>Verify whether each relevant element of the dataset under inspection has been properly mapped to the INSPIRE application schema: Inspect the documentation of the source data set and determine, if all relevant information has been mapped correctly to the INSPIRE application schema.</description>
    <requirement ref="hy_ir_a3"/>
    <requirement ref="hy_ir_a4_1"/>
    <requirement ref="hy_ir_a4_2"/>
    <requirement ref="hy_ir_a4_3"/>
    <expression>Manual test</expression>
  </Assertion>
  <Assertion enabled="manual" id="hy-n-as.schema.schema-extensions-not-overlapping" mode="global" severity="error">
    <label>Schema extensions not overlapping with the INSPIRE application schema</label>
    <shortDescription>Verify that any INSPIRE schema extensions do not contradict or overlap with the approved INSPIRE application schemas.</shortDescription>
    <description>Inspect the XML Schema namespace of each feature element that appears to be related to hydrographic networks. If a namespace URI does not start with "http://inspire.ec.europa.eu/schemas/" or "urn:x-inspire:specification:gmlas:" it is not one of the approved INSPIRE application schema namespaces. Review the extension documentation for the identified namespaces to check that any extensions do not overlap with the spatial object types and associated data types and enumerations that are defined in Annexes II, III and IV of the Implementing Rule.</description>
    <requirement ref="hy_ir_a4_1"/>
    <expression>Manual test</expression>
  </Assertion>
  <TestCase id="hy-n-as.values">
    <label>Code list values</label>
    <description>Verify whether all attributes whose value type is a code list take the values set out therein: When an attribute has a code list as its type, compare the values of each instance with those provided in the INSPIRE code list register. To pass this tests any instance of an attribute
<li>shall take only values explicitly specified in the code list when the code list‘s extensibility is 'none'.</li>
<li>shall take only a value explicitly specified in the code list or shall take a value that is narrower (i.e. more specific) than those explicitly specified in the application schema when the code list‘s extensibility is 'narrower'.</li></description>
    <requirement ref="hy_ir_a4_3"/>
    <requirement ref="hy_ir_a6_1"/>
    <version>0.1</version>
    <author>interactive instruments GmbH</author>
    <creationDate>2016-05-02</creationDate>
    <lastEditor>interactive instruments GmbH</lastEditor>
    <lastUpdateDate>2016-05-29</lastUpdateDate>
  </TestCase>
  <Assertion enabled="true" id="hy-n-as.values.flowDirection" mode="global" severity="error">
    <label>Code list values for WatercourseLink property flowDirection are from the INSPIRE code list</label>
    <description>Verify that only values from the INSPIRE registry are used as no extensions are allowed for this property: Inspect the code list valued property elements hy-n:flowDirection of WatercourseLink features. If a reference (@xlink:href) has a value that does is not one of the allowed values (see http://inspire.ec.europa.eu/codelist/LinkDirectionValue), report disallowedCodeListValue.</description>
    <requirement ref="hy_ir_a4_3"/>
    <requirement ref="hy_ir_a6_1"/>
    <expression>let $featuresToInspect := $features[self::hy-n:WatercourseLink]  (: extend with subtypes :)
let $values := ( 'http://inspire.ec.europa.eu/codelist/LinkDirectionValue/bothDirections', 'http://inspire.ec.europa.eu/codelist/LinkDirectionValue/inDirection', 'http://inspire.ec.europa.eu/codelist/LinkDirectionValue/inOppositeDirection' )

let $featuresWithErrors := $featuresToInspect[hy-n:flowDirection/@xlink:href and not(hy-n:flowDirection/@xlink:href = $values)][position() le $limitErrors]
return
  (local:statistics-info($featuresWithErrors),
  for $feature in $featuresWithErrors
   order by $feature/@gml:id
   return
    local:object-message($feature, concat('The property ''hy-n:flowDirection'' has a value ''',$feature/hy-n:flowDirection/@xlink:href,''' that is not one of the allowed values listed at http://inspire.ec.europa.eu/codelist/LinkDirectionValue.')))</expression>
  </Assertion>
  <Assertion enabled="true" id="hy-n-as.values.hydroNodeCategory" mode="global" severity="error">
    <label>Code list values for HydroNode property hydroNodeCategory are from the INSPIRE code list</label>
    <shortDescription>Verify that only values from the INSPIRE registry are used as no extensions are allowed for this property.</shortDescription>
    <description>Inspect the code list valued property elements hy-n:hydroNodeCategory of HydroNode features. If a reference (@xlink:href) has a value that does is not one of the allowed values (see http://inspire.ec.europa.eu/codelist/HydroNodeCategoryValue), report disallowedCodeListValue.</description>
    <requirement ref="hy_ir_a4_3"/>
    <requirement ref="hy_ir_a6_1"/>
    <expression>let $featuresToInspect := $features[self::hy-n:HydroNode]  (: extend with subtypes :)
let $values := ( 'http://inspire.ec.europa.eu/codelist/HydroNodeCategoryValue/boundary', 'http://inspire.ec.europa.eu/codelist/HydroNodeCategoryValue/flowConstriction', 'http://inspire.ec.europa.eu/codelist/HydroNodeCategoryValue/flowRegulation', 'http://inspire.ec.europa.eu/codelist/HydroNodeCategoryValue/junction', 'http://inspire.ec.europa.eu/codelist/HydroNodeCategoryValue/outlet', 'http://inspire.ec.europa.eu/codelist/HydroNodeCategoryValue/source' )

let $featuresWithErrors := $featuresToInspect[hy-n:hydroNodeCategory/@xlink:href and not(hy-n:hydroNodeCategory/@xlink:href = $values)][position() le $limitErrors]
return
  (local:statistics-info($featuresWithErrors),
  for $feature in $featuresWithErrors
   order by $feature/@gml:id
   return
    local:object-message($feature, concat('The property ''hy-n:hydroNodeCategory'' has a value ''',$feature/hy-n:hydroNodeCategory/@xlink:href,''' that is not one of the allowed values listed at http://inspire.ec.europa.eu/codelist/HydroNodeCategoryValue.')))</expression>
  </Assertion>    
  <Assertion enabled="false" id="hy-n-as.values.code-list-extensions" mode="global" severity="error">
    <label>Code list extensions not overlapping with INSPIRE code lists</label>
    <shortDescription>Verify that any extensions do not contradict or overlap with the approved INSPIRE code lists.</shortDescription>
    <description>Verify that any extensions do not contradict or overlap with the approved INSPIRE code lists: Inspect the code list valued property elements (hy-n:flowDirection, hy-n:hydroNodeCategory). If a reference (@xlink:href) has a value that does not start with http://inspire.ec.europa.eu/codelist/, review the code list to check that any extensions do not overlap with the code lists that are defined in Annexes II, III and IV and that all extensions conform to the requirements.</description>
    <requirement ref="hy_ir_a4_3"/>
    <expression>Not necessary, no extensions are allowed. Just kept here for completeness when using this as a template.</expression>
  </Assertion>
  <TestCase id="hy-n-as.constraints">
    <label>OCL constraints specified in the application schema</label>
    <description>Verify that the features provided in the dataset adhere to the constraints specified in the INSPIRE application schema: Examine all instances of data for the constraints specified for the corresponding spatial object / data type. Each instance shall adhere to all constraints specified in the INSPIRE application schema.</description>
    <requirement ref="hy_ir_a4_2"/>
    <version>0.1</version>
    <author>interactive instruments GmbH</author>
    <creationDate>2016-05-02</creationDate>
    <lastEditor>interactive instruments GmbH</lastEditor>
    <lastUpdateDate>2016-05-29</lastUpdateDate>
  </TestCase>
  <Assertion enabled="false" id="hy-n-as.constraints.dummy" mode="global" severity="error">
    <label>Constraint XYZ</label>
    <description>Verify that the OCL constraint XYZ specified in the UML model of the application schema is met: Validate features against the OCL constraint XYZ included in the UML model of the INSPIRE application schema. For unmet constraints report constraintViolation.</description>
    <requirement ref="hy_ir_a4_2"/>
    <expression>Not necessary, no constraints specified for this application schema. Just kept here for completeness when using this as a template.</expression>
  </Assertion>
  <TestCase id="hy-n-as.sf">
    <label>Geometry representation (Simple Features)</label>
    <description>Verify that the features are Simple Features, i.e. their geometries meet the requirements of the Simple Features standard.: Check whether all spatial properties only use 0, 1 and 2-dimensional geometric objects that exist in the right 1-, 2- or 3-dimensional coordinate space, and where all interpolations respect the rules specified in the reference documents.</description>
    <requirement ref="hy_ir_a12_1"/>
    <version>0.1</version>
    <author>interactive instruments GmbH</author>
    <creationDate>2016-05-02</creationDate>
    <lastEditor>interactive instruments GmbH</lastEditor>
    <lastUpdateDate>2016-05-29</lastUpdateDate>
  </TestCase>
  <Assertion enabled="true" id="hy-n-as.sf.topology" mode="global" severity="error">
    <label>No spatial topology types</label>
    <description>Verify that no spatial topology types are used, i.e. check that none of the GML object elements for spatial topology are used as child elements of a feature from the application schema. For unmet constraints report spatialTopologyTypeFound. </description>
    <requirement ref="hy_ir_a12_1"/>
    <expression>let $featuresToInspect := $features[self::hy-n:WatercourseLink|self::hy-n:HydroNode|self::hy-n3:WatercourseLink|self::hy-n3:HydroNode]  (: extend with subtypes :)
let $featuresWithErrors := $featuresToInspect[.//*[self::gml:Node|self::gml:Edge|self::gml:Face|self::gml:TopoSolid|self::gml:TopoPoint|self::gml:TopoCurve|self::gml:TopoSurface|self::gml:TopoVolume|self::gml:TopoComplex]][position() le $limitErrors]
return
  (local:statistics-info($featuresWithErrors),
  for $feature in $featuresWithErrors
   order by $feature/@gml:id
   let $element := $feature//*[self::gml:Node|self::gml:Edge|self::gml:Face|self::gml:TopoSolid|self::gml:TopoPoint|self::gml:TopoCurve|self::gml:TopoSurface|self::gml:TopoVolume|self::gml:TopoComplex][1]
   return
    local:object-message($feature, concat('A spatial topology element ''',name($element),''' was found. Spatial properties are limited to the set of geometric types consisting of point, curve with linear interpolation, planar surface, or aggregates thereof. Spatial topology is excluded.')))</expression>
  </Assertion>
  <Assertion enabled="true" id="hy-n-as.sf.curves" mode="global" severity="error">
    <label>Content of curves</label>
    <description>Verify that only linear interpolation is used, i.e. check that none of the other GML curve segment object elements are used as child elements of a feature from the application schema. For unmet constraints report invalidInterpolationFound. </description>
    <requirement ref="hy_ir_a12_1"/>
    <expression>let $featuresToInspect := $features[self::hy-n:WatercourseLink|self::hy-n:HydroNode|self::hy-n3:WatercourseLink|self::hy-n3:HydroNode]  (: extend with subtypes :)
let $featuresWithErrors := $featuresToInspect[.//gml:Curve/gml:segments/*[not(self::gml:LineStringSegment)]][position() le $limitErrors]
return
  (local:statistics-info($featuresWithErrors),
  for $feature in $featuresWithErrors
   order by $feature/@gml:id
   let $element := $feature//gml:Curve/gml:segments/*[not(self::gml:LineStringSegment)][1]
   return
    local:object-message($feature, concat('A curve geometry with an invalid curve segment ''',name($element),''' was found. Curves (standalone or within surfaces) must have linear interpolation (LineString, Curve with LineStringSegment segments).')))</expression>
  </Assertion>
  <Assertion enabled="true" id="hy-n-as.sf.surfaces-1" mode="global" severity="error">
    <label>Surface elements</label>
    <description>Verify that only gml:Polygon or gml:Surface are used, i.e. check that none of the disallowed GML surface object elements are used as child elements of a feature from the application schema. For unmet constraints report invalidSurfaceElementFound. </description>
    <requirement ref="hy_ir_a12_1"/>
    <expression>let $featuresToInspect := $features[self::hy-n:WatercourseLink|self::hy-n:HydroNode|self::hy-n3:WatercourseLink|self::hy-n3:HydroNode]  (: extend with subtypes :)
let $featuresWithErrors := $featuresToInspect[.//*[self::gml:OrientableSurface|self::gml:CompositeSurface|self::gml:PolyhedralSurface|self::gml:Tin|self::gml:TriangulatedSurface]][position() le $limitErrors]
return
  (local:statistics-info($featuresWithErrors),
  for $feature in $featuresWithErrors
   order by $feature/@gml:id
   let $element := $feature//*[self::gml:OrientableSurface|self::gml:CompositeSurface|self::gml:PolyhedralSurface|self::gml:Tin|self::gml:TriangulatedSurface][1]
   return
    local:object-message($feature, concat('A surface geometry with an invalid GML object element ''',name($element),''' was found. Planar surface types are restricted to Polygon or Surface elements.')))</expression>
  </Assertion>
  <Assertion enabled="true" id="hy-n-as.sf.surfaces-2" mode="global" severity="error">
    <label>Content of surfaces</label>
    <description>Verify that only planar interpolation is used, i.e. check that only gml:PolygonPatch is used as a GML surface patch object elements in features from the application schema. For unmet constraints report invalidSurfacePatchElementFound. </description>
    <requirement ref="hy_ir_a12_1"/>
    <expression>let $featuresToInspect := $features[self::hy-n:WatercourseLink|self::hy-n:HydroNode|self::hy-n3:WatercourseLink|self::hy-n3:HydroNode]  (: extend with subtypes :)
let $featuresWithErrors := $featuresToInspect[.//gml:Surface/gml:patches/*[not(self::gml:PolygonPatch)]][position() le $limitErrors]
return
  (local:statistics-info($featuresWithErrors),
  for $feature in $featuresWithErrors
   order by $feature/@gml:id
   let $element := $feature//gml:Surface/gml:patches/*[not(self::gml:PolygonPatch)][1]
   return
    local:object-message($feature, concat('A surface geometry with an invalid GML object element ''',name($element),''' for surface patches was found. Surface patches are restricted to gml:PolygonPatch elements.')))</expression>
  </Assertion>
  <Assertion enabled="true" id="hy-n-as.sf.othertypes" mode="global" severity="error">
    <label>Use of other geometry types</label>
    <description>Verify that only valid GML geometry elements are used, i.e. check that none of the disallowed GML geometry object elements are used as child elements of a feature from the application schema. For unmet constraints report invalidGeometryElementFound. </description>
    <requirement ref="hy_ir_a12_1"/>
    <expression>let $featuresToInspect := $features[self::hy-n:WatercourseLink|self::hy-n:HydroNode|self::hy-n3:WatercourseLink|self::hy-n3:HydroNode]  (: extend with subtypes :)
let $featuresWithErrors := $featuresToInspect[.//*[self::gml:Solid|self::gml:MultiSolid|self::gml:CompositeSolid|self::gml:CompositeCurve|self::gml:Grid]][position() le $limitErrors]
return
  (local:statistics-info($featuresWithErrors),
  for $feature in $featuresWithErrors
   order by $feature/@gml:id
   let $element := $feature//*[self::gml:Solid|self::gml:MultiSolid|self::gml:CompositeSolid|self::gml:CompositeCurve|self::gml:Grid][1]
   return
    local:object-message($feature, concat('A geometry with an invalid GML object element ''',name($element),''' was found. Supported geometry types are restricted to point, curve with linear interpolation, planar surface, or aggregates thereof.')))</expression>
  </Assertion>
  <Assertion enabled="true" id="hy-n-as.sf.pos-point" mode="global" severity="error">
    <label>Geometry coordinates of points</label>
    <description>Verify that in points only gml:pos is used for coordinates, i.e. check that only gml:pos is used in point geometries of a feature from the application schema. For unmet constraints report invalidPositionElementFound. </description>
    <requirement ref="hy_ir_a12_1"/>
    <expression>let $featuresToInspect := $features[self::hy-n:WatercourseLink|self::hy-n:HydroNode|self::hy-n3:WatercourseLink|self::hy-n3:HydroNode]  (: extend with subtypes :)
let $featuresWithErrors := $featuresToInspect[.//gml:Point/*[not(self::gml:pos)]][position() le $limitErrors]
return
  (local:statistics-info($featuresWithErrors),
  for $feature in $featuresWithErrors
   order by $feature/@gml:id
   let $element := $feature//gml:Point/*[not(self::gml:pos)][1]
   return
    local:object-message($feature, concat('A point geometry with an invalid GML object element for coordinates ''',name($element),''' was found. Only gml:pos is allowed.')))</expression>
  </Assertion>
  <!--
  <Assertion enabled="true" id="hy-n-as.sf.pos-circle-by-centerpoint" mode="global" severity="error">
    <label>Geometry coordinates of circles by centerpoint</label>
    <description>Verify that in circles by centerpoint only gml:pos is used for coordinates, i.e. check that only gml:pos is used in circles by centerpoint geometries of a feature from the application schema. For unmet constraints report invalidPositionElementFound. </description>
    <requirement ref="hy_ir_a12_1"/>
    <expression>let $featuresToInspect := $features[self::hy-n:WatercourseLink|self::hy-n:HydroNode|self::hy-n3:WatercourseLink|self::hy-n3:HydroNode]  (: extend with subtypes :)
let $featuresWithErrors := $featuresToInspect[.//gml:CircleByCenterPoint/*[not(self::gml:pos|self::gml:radius)]][position() le $limitErrors]
return
  (local:statistics-info($featuresWithErrors),
  for $feature in $featuresWithErrors
   order by $feature/@gml:id
   let $element := $feature//gml:CircleByCenterPoint/*[not(self::gml:pos|self::gml:radius)][1]
   return
    local:object-message($feature, concat('A circles by centerpoint geometry with an invalid GML object element for coordinates ''',name($element),''' was found. Only gml:pos is allowed.')))</expression>
  </Assertion>
  -->
  <Assertion enabled="true" id="hy-n-as.sf.pos-other" mode="global" severity="error">
    <label>Geometry coordinates in curve and surface geometries</label>
    <description>Verify that in curves and surfaces only gml:posList is used for coordinates, i.e. check that the only gml:posList is used in curve and surface geometries of a feature from the application schema. For unmet constraints report invalidPositionElementFound.</description>
    <requirement ref="hy_ir_a12_1"/>
    <expression>let $featuresToInspect := $features[self::hy-n:WatercourseLink|self::hy-n:HydroNode|self::hy-n3:WatercourseLink|self::hy-n3:HydroNode]  (: extend with subtypes :)
let $featuresWithErrors := $featuresToInspect[.//*[self::gml:LineString|self::gml:LineStringSegment|self::gml:LinearRing]/*[not(self::gml:posList)]][position() le $limitErrors]
return
  (local:statistics-info($featuresWithErrors),
  for $feature in $featuresWithErrors
   order by $feature/@gml:id
   let $element := ($feature//*[self::gml:LineString|self::gml:LineStringSegment|self::gml:LinearRing|self::gml:Arc|self::gml:Circle]/*[not(self::gml:posList)])[1]
   return
    local:object-message($feature, concat('A curve or surface geometry with an invalid GML object element for coordinates ''',name($element),''' was found. Only gml:posList is allowed.')))</expression>
  </Assertion>
  <Assertion enabled="true" id="hy-n-as.sf.aggregates" mode="global" severity="error">
    <label>Content of geometry aggregates</label>
    <description>Verify that geometry aggregates do not use the GML array property elements, i.e. check that the only the regular property elements are used, but not the array property elements. For example, for a gml:MultiPoint, only gml:pointMember may be used, not gml:pointMembers. For violations report arrayElementFound.</description>
    <requirement ref="hy_ir_a12_1"/>
    <expression>let $featuresToInspect := $features[self::hy-n:WatercourseLink|self::hy-n:HydroNode|self::hy-n3:WatercourseLink|self::hy-n3:HydroNode]  (: extend with subtypes :)
let $featuresWithErrors := $featuresToInspect[.//*[self::gml:MultiPoint/gml:pointMembers|self::gml:MultiCurve/gml:curveMembers|self::gml:MultiSurface/gml:surfaceMembers|self::gml:MultiGeometry/gml:geometryMembers]][position() le $limitErrors]
return
  (local:statistics-info($featuresWithErrors),
  for $feature in $featuresWithErrors
   order by $feature/@gml:id
   let $element := ($feature//*[self::gml:MultiPoint|self::gml:MultiCurve|self::gml:MultiSurface|self::gml:MultiGeometry]/*[self::gml:pointMembers|self::gml:curveMembers|self::gml:surfaceMembers|self::gml:geometryMembers])[1]
   return
    local:object-message($feature, concat('A geometric aggregate using the array property ''',name($element),''' was found. Only the standard properties (gml:pointMember for gml:MultiPoint, gml:curveMember for gml:MultiCurve, gml:surfaceMember for gml:MultiSurface, and gml:geometryMember for gml:MultiGeometry) are allowed.')))</expression>
  </Assertion>
  <Assertion enabled="true" id="hy-n-as.sf.dimension" mode="global" severity="error">
    <label>Coordinate dimension</label>
    <description>Coordinate reference systems may have 1, 2 or 3 dimensions, i.e. check all occurances of @srsDimension and for values greater than '3' report tooManyDimensions.</description>
    <requirement ref="hy_ir_a12_1"/>
    <expression>let $featuresToInspect := $features[self::hy-n:WatercourseLink|self::hy-n:HydroNode|self::hy-n3:WatercourseLink|self::hy-n3:HydroNode]  (: extend with subtypes :)
let $featuresWithErrors := $featuresToInspect[.//*[@srsDimension > 3]][position() le $limitErrors]
return
  (local:statistics-info($featuresWithErrors),
  for $feature in $featuresWithErrors
   order by $feature/@gml:id
   let $dimension := $feature//@srsDimension[. > 3][1]
   return
    local:object-message($feature, concat('Coordinates with a dimension ''',data($dimension),''' were found. Only coordinate reference systems with 1, 2 or 3 dimensions are allowed.')))</expression>
  </Assertion>
  <Assertion enabled="true" id="hy-n-as.sf.valid" mode="global" severity="error">
    <label>Valid geometries</label>
    <description>Verify that in curves and surfaces only gml:posList is used for coordinates, i.e. validate all geometry elements of a feature from the application schema. For invalid geometries report invalidGeometry. </description>
    <requirement ref="hy_ir_a12_1"/>
    <expression>let $featuresWithErrors := 
 for $feature in $features[self::hy-n:WatercourseLink|self::hy-n:HydroNode|self::hy-n3:WatercourseLink|self::hy-n3:HydroNode] (: extend with subtypes :)
  return
   if (contains(ggeo:validate($feature,'110'),'F')) then $feature else ()
return
  (local:statistics-info($featuresWithErrors),
  for $feature in $featuresWithErrors
   order by $feature/@gml:id
   return
    local:object-message($feature, 'The feature geometry is not a valid GML geometry.'))</expression>
  </Assertion>
  <TestCase id="hy-n-as.geometry">
    <label>Geometry representation (Consistency)</label>
    <description>Verify geometric consistency, i.e. check that geometries are consistent with the geometries of other features in the data set.</description>
    <requirement ref="hy_ir_ii_s8_7_4_1"/>
    <requirement ref="hy_ir_ii_s8_7_4_2"/>
    <requirement ref="hy_ir_ii_s8_7_4_3"/>
    <requirement ref="hy_ir_ii_s8_7_4_4"/>
    <version>0.1</version>
    <author>interactive instruments GmbH</author>
    <creationDate>2016-05-02</creationDate>
    <lastEditor>interactive instruments GmbH</lastEditor>
    <lastUpdateDate>2016-05-29</lastUpdateDate>
  </TestCase>
  <Assertion enabled="manual" id="hy-n-as.geometry.multiple-resolutions" mode="global" severity="error">
    <label>Multiple resolutions covered by the same data set</label>
    <description>Verify that the level of detail is explicit in data sets covering multiple resolutions, i.e. if features are provided at different spatial resolutions, verify that the spatial resolution is specified for each of the features in the levelOfDetail attribute.</description>
    <requirement ref="hy_ir_ii_s8_7_4_1"/>
    <expression>Manual test</expression>
  </Assertion>
  <Assertion enabled="manual" id="hy-n-as.geometry.link-intersections" mode="global" severity="error">
    <label>Intersections of links consistent with the real world</label>
    <description>Verify that watercourse links intersections are consistent with the real world, i.e. check that WatercourseLink features intersect wherever a connection exists between the real world phenomena they represent. No intersections must be created at crossing network elements when it is not possible for water to pass from one element to another.</description>
    <requirement ref="hy_ir_ii_s8_7_4_2"/>
    <expression>Manual test</expression>
  </Assertion>
  <Assertion enabled="true" id="hy-n-as.geometry.no-free-nodes" mode="global" severity="error">
    <label>Hydrographic nodes are at start or end of a watercourse link</label>
    <description>Verify that all hydrographic nodes are at the start or end of a watercourse link, i.e. check for each HydroNode that the geometry (a gml:Point) is located a position that touches a WatercourseLink.centerlineGeometry (a gml:LineString or gml:Curve). Otherwise report freeNode.</description>
    <requirement ref="hy_ir_ii_s8_7_4_3"/>
    <expression>let $nodes := $features[self::hy-n:HydroNode|self::hy-n3:HydroNode] (: extend with subtypes :)
let $links := $features[self::hy-n:WatercourseLink|self::hy-n3:WatercourseLink] (: extend with subtypes :)

return
if (count($nodes) = 0) 
then prof:time((),false(),'Test no-free-nodes. No nodes in the data set: ')
else

(: Check dass relevante Objekte valide Geometrie besitzen :)
let $nodes_invalid_geom := prof:time($nodes[contains(ggeo:validate(.,'110'),'F')],false(),concat('Test no-free-nodes: HydroNode validation (',count($nodes),' features): '))
let $links_invalid_geom := prof:time($links[contains(ggeo:validate(.,'110'),'F')],false(),concat('Test no-free-nodes: WatercourseLink validation (',count($links),' features): '))
let $featuresWithInvalidGeometry := $nodes_invalid_geom union $links_invalid_geom
  
(: Bearbeitung nur für Objekte mit valider Geometrie :) 
let $nodes_valid_geom := ($nodes except $nodes_invalid_geom)
let $links_valid_geom := ($links except $links_invalid_geom)

let $nodes_geometryMap := prof:time(map:new(
  for $node in $nodes_valid_geom
  return map { $node/@gml:id : ggeo:parseGeometry($node/*/*[self::gml:*][1]) }
),false(),concat('Test no-free-node: Parsing network geometries (',count($nodes_valid_geom),' features): '))
let $links_geometryMap := prof:time(map:new(
  for $link in $links_valid_geom
  return map { $link/@gml:id : ggeo:parseGeometry($link/*/*[self::gml:*][1]) }
  ),false(),concat('Test no-free-node: Parsing surface water geometries. (',count($links_valid_geom),' features): '))

let $featuresWithErrors := prof:time($nodes_valid_geom[not(ggeo:touches(map:get($nodes_geometryMap,./@gml:id),for-each($links_valid_geom/@gml:id,$links_geometryMap),false()))][position() le $limitErrors],false(),'Test no-free-node: Identifying network elements not inside a surface water: ')
  
return
  (local:statistics-info($featuresWithErrors),
  for $feature in $featuresWithErrors
   order by $feature/@gml:id
   return
    local:object-message($feature, 'The node is not located at the start or end of any WatercourseLink feature in the data set.'))</expression>
  </Assertion>
  <Assertion enabled="manual" id="hy-n-as.geometry.wfd-consistency" mode="global" severity="error">
    <label>Consistency with the Water Framework Directive reporting</label>
    <description>Verify that geometries are consistent with the reporting under the Water Framework Directive, i.e. review for each feature that the geometry is the same as the geometry used for reporting obligations under Directive 2000/60/EC.</description>
    <requirement ref="hy_ir_ii_s8_7_4_4"/>
    <expression>Manual test</expression>
  </Assertion>
  <TestCase id="hy-n-as.identifiers-references">
    <label>Object identifiers and references</label>
    <shortDescription>Verify the consistent use of identifiers and references to other features</shortDescription>
    <requirement ref="hy_ir_ii_s8_7_3_1"/>
    <requirement ref="hy_ir_ii_s8_7_3_2"/>
    <version>0.1</version>
    <author>interactive instruments GmbH</author>
    <creationDate>2016-05-02</creationDate>
    <lastEditor>interactive instruments GmbH</lastEditor>
    <lastUpdateDate>2016-05-29</lastUpdateDate>
  </TestCase>
  <Assertion enabled="manual" id="hy-n-as.identifiers-references.identifier-reuse" mode="global" severity="error">
    <label>Consistency with the Water Framework Directive reporting</label>
    <description>Verify that identifiers are reusing authoritative, pan-European sources, i.e. review for each feature that, if there is another feature representing the same real world object, then these spatial objects shall carry either the same, unique, geographical name or the same hydrographic thematic identifier.</description>
    <requirement ref="hy_ir_ii_s8_7_3_1"/>
    <expression>Manual test</expression>
  </Assertion>
  <Assertion enabled="false" id="hy-n-as.identifiers-references.linear-referencing" mode="global" severity="error">
    <label>Consistency of linear references</label>
    <description>For each NetworkProperty feature that links to a WatercourseLink or a WatercourseLinkSequence, verify that any linear references are consistent with the length of the geometry of the network feature.</description>
    <requirement ref="hy_ir_ii_s8_7_3_2"/>
    <expression>As there is no network property specified in the application schema, this requirement is superfluous and the test could be dropped. It really belongs to application schemas that make use of NetworkProperty features that reference WatercourseLink features.</expression>
  </Assertion>
  <!--
  <TestCase id="hy-n-as.delineation-known">
    <label>DelineationKnown attribute</label>
    <description>Verify that the delineationKnown attribute is not misused.</description>
    <requirement ref="hy_ir_ii_s8_7_5_1"/>
    <requirement ref="hy_ir_ii_s8_7_5_2"/>
    <version>0.1</version>
    <author>interactive instruments GmbH</author>
    <creationDate>2016-05-02</creationDate>
    <lastEditor>interactive instruments GmbH</lastEditor>
    <lastUpdateDate>2016-05-29</lastUpdateDate>
  </TestCase>
  <Assertion enabled="manual" id="hy-n-as.delineation-known.xxx" mode="global" severity="error">
    <label>Use of attribute delineationKnown</label>
    <shortDescription>Verify that the attribute delineationKnown is not used to indicate a change of geometry over time where this change of geometry is known.</shortDescription>
    <description>Verify for each Shore and Watercourse feature with a value for the attribute delineationKnown that the value is not used to indicate a change of geometry over time where this change of geometry is known.</description>
    <requirement ref="hy_ir_ii_s8_7_5_1"/>
    <expression>Manual test</expression>
  </Assertion>
  <Assertion enabled="manual" id="hy-n-as.delineation-known.use" mode="global" severity="error">
    <label>Use of attribute delineationKnown</label>
    <shortDescription>Verify that the attribute delineationKnown is not used to indicate a change of geometry over time where this change of geometry is known.</shortDescription>
    <description>Verify for each Shore and Watercourse feature with a value for the attribute delineationKnown that the value is not used to indicate a change of geometry over time where this change of geometry is known.</description>
    <requirement ref="hy_ir_ii_s8_7_5_2"/>
    <expression>Manual test</expression>
  </Assertion>
  -->
  <TestCase id="hy-n-as.link-centrelines">
    <label>Centrelines of watercourse links</label>
    <description>Verify that the watercourse links are consistent with the real world.</description>
    <requirement ref="hy_ir_ii_s8_7_6"/>
    <version>0.1</version>
    <author>interactive instruments GmbH</author>
    <creationDate>2016-05-02</creationDate>
    <lastEditor>interactive instruments GmbH</lastEditor>
    <lastUpdateDate>2016-05-29</lastUpdateDate>
  </TestCase>
  <Assertion enabled="manual" id="hy-n-as.link-centrelines.intersections" mode="global" severity="error">
    <label>Centrelines of watercourse links</label>
    <description>Verify that the centrelines of watercourse links fall within the extent of the physical real world object that they represent, if the WatercourseLink feature is indicated as not being 'fictitious', i.e. check for each WatercourseLink object with a property 'fictitious' with a value 'false' that its centerline geometry falls within the extent of the physical real world object that they represent.</description>
    <requirement ref="hy_ir_ii_s8_7_6"/>
    <expression>Manual test</expression>
  </Assertion>
  <TestCase id="hy-n-as.network-connectivity">
    <label>Network connectivity</label>
    <description>Verify the connectivity of the hydrographic network.</description>
    <requirement ref="hy_ir_ii_s8_7_7_1"/>
    <requirement ref="hy_ir_ii_s8_7_7_2"/>
    <requirement ref="hy_ir_ii_s8_7_7_3"/>
    <version>0.1</version>
    <author>interactive instruments GmbH</author>
    <creationDate>2016-05-02</creationDate>
    <lastEditor>interactive instruments GmbH</lastEditor>
    <lastUpdateDate>2016-05-29</lastUpdateDate>
  </TestCase>
  <Assertion enabled="false" id="hy-n-as.network-connectivity.1" mode="global" severity="error">
    <label>startNode and endNode properties consistent with spatial geometry</label>
    <description>Verify that all hydrographic nodes are at the start or end of a watercourse link. For each WatercourseLink with a startNode or endNode property, check that the distance between the start or end of the centerlineGeometry and the geometry of the start and end HydroNode is smaller than the connectivityTolerance. Otherwise report noConnectionStart or noConnectionEnd.<br/><br/>
Parameter: connectivityTolerance - a number, the tolerance in meter.<br/><br/>    
Geometries typically will need to be converted into a meter-based CRS, eg ETRS89 LAEA or LCC. It is unclear how to handle geometries outside of continental Europe. Classify as MANUAL?</description>
    <requirement ref="hy_ir_ii_s8_7_7_1"/>
    <expression>tbd</expression>
  </Assertion>
  <Assertion enabled="false" id="hy-n-as.network-connectivity.2" mode="global" severity="error">
    <label>No additional nodes close to the ends of watercourse links</label>
    <description>Verify that all hydrographic nodes are at the start or end of a watercourse link. For each WatercourseLink verify that the only HydroNode features in the distance around the start or end of the centerlineGeometry are the nodes associated via the startNode and endNode properties. Otherwise report additionalNode.<br/><br/>    
Parameter: connectivityTolerance - a number, the tolerance in meter.<br/><br/>
Geometries typically will need to be converted into a meter-based CRS, eg ETRS89 LAEA or LCC. It is unclear how to handle geometries outside of continental Europe. Classify as MANUAL?</description>
    <requirement ref="hy_ir_ii_s8_7_7_2"/>
    <expression>tbd</expression>
  </Assertion>
  <Assertion enabled="false" id="hy-n-as.network-connectivity.3" mode="global" severity="error">
    <label>???</label>
    <description>???</description>
    <requirement ref="hy_ir_ii_s8_7_7_3"/>
    <expression>Requirement unclear: "In data sets where both transport links and nodes are present, the relative position of nodes and link ends in relation to the specified connectivity tolerance shall correspond to the associations that exist between them in the data set." What should be tested?<br/><br/>
Parameter: connectivityTolerance - a number, the tolerance in meter.<br/><br/>
Geometries typically will need to be converted into a meter-based CRS, eg ETRS89 LAEA or LCC. It is unclear how to handle geometries outside of continental Europe. Classify as MANUAL?</expression>
  </Assertion>
  <Assertion enabled="manual" id="hy-n-as.network-connectivity.metadata" mode="global" severity="error">
    <label>Centrelines of watercourse links</label>
    <description>Verify that the connectivity tolerance is consistent with the metadata of the data set, i.e. check that the connectivity tolerance provided for the test is the same included in the metadata of the data set in the properties 'specification' and 'explanation' of the DQ_ConformanceResult element in a DQ_TopologicalConsistency element.</description>
    <requirement ref="hy_ir_ii_s8_7_7_1"/>
    <requirement ref="hy_ir_ii_s8_7_7_2"/>
    <requirement ref="hy_ir_ii_s8_7_7_3"/>
    <expression>Manual test</expression>
  </Assertion>
  <TestSuite id="hy-n-rs">
    <label>Conformance class "Reference Systems, Hydrography - Network 3.1"</label>
    <description>Examine the spatial data set against the requirements related to reference systems (spatial and temporal, units of measurement).<br/><br/>To be able to test this conformance class, the encoding of the data set must be known, i.e. this is a parameterized conformance class. This test suite assumes that the GML encoding is used and has an indirect dependency to the conformance class "GML application schema for Hydrography - Network 3.0/4.0".</description>
    <testObjectType>spatial data set</testObjectType>
    <dependency type="indirect" ref="gml-hy-n"/>
    <identifier>http://inspire.ec.europa.eu/conformance-class/ir/hy/rs/hy-n</identifier>
    <version>0.1</version>
    <author>interactive instruments GmbH</author>
    <creationDate>2016-05-02</creationDate>
    <lastEditor>interactive instruments GmbH</lastEditor>
    <lastUpdateDate>2016-05-29</lastUpdateDate>
  </TestSuite>
  <TestCase id="hy-n-rs.spatial">
    <label>Spatial coordinate reference system</label>
    <description>Verify that all references to spatial coordinate reference systems are using one of the http URIs approved for use in INSPIRE data sets.</description>
    <requirement ref="hy_ir_ii_s1_2"/>
    <requirement ref="hy_ir_ii_s1_3"/>
    <requirement ref="hy_ir_ii_s1_5_1"/>
    <requirement ref="hy_ir_ii_s1_5_2"/>
    <requirement ref="hy_tg_2"/>
    <version>0.1</version>
    <author>interactive instruments GmbH</author>
    <creationDate>2016-05-02</creationDate>
    <lastEditor>interactive instruments GmbH</lastEditor>
    <lastUpdateDate>2016-05-29</lastUpdateDate>
  </TestCase>
  <Assertion enabled="true" id="hy-n-rs.spatial.features" mode="global" severity="error">
    <label>Spatial coordinate reference system references in features</label>
    <description>Verify that all references to coordinate reference systems in the features use one of the approved http URIs, i.e. check that all references to coordinate reference systems in the srsName XML attributes in the features use one of the URIs listed in TG requirement 2, otherwise report unknownCRS1. Note that additional values will be added to the list for regions outside of continental Europe, if nominated by a Member State and available in a CRS register with a persistent http URI.</description>
    <requirement ref="hy_ir_ii_s1_2"/>
    <requirement ref="hy_ir_ii_s1_3"/>
    <requirement ref="hy_ir_ii_s1_5_1"/>
    <requirement ref="hy_ir_ii_s1_5_2"/>
    <requirement ref="hy_tg_2"/>
    <expression>let $featuresToInspect := $features[self::hy-n:WatercourseLink|self::hy-n:HydroNode|self::hy-n3:WatercourseLink|self::hy-n3:HydroNode]  (: extend with subtypes :)
let $crsuris := (
'http://www.opengis.net/def/crs/EPSG/0/4936', 'http://www.opengis.net/def/crs/EPSG/0/4937', 'http://www.opengis.net/def/crs/EPSG/0/4258', 'http://www.opengis.net/def/crs/EPSG/0/3035', 'http://www.opengis.net/def/crs/EPSG/0/3034', 'http://www.opengis.net/def/crs/EPSG/0/3038', 'http://www.opengis.net/def/crs/EPSG/0/3039', 'http://www.opengis.net/def/crs/EPSG/0/3040', 'http://www.opengis.net/def/crs/EPSG/0/3041', 'http://www.opengis.net/def/crs/EPSG/0/3042', 'http://www.opengis.net/def/crs/EPSG/0/3043', 'http://www.opengis.net/def/crs/EPSG/0/3044', 'http://www.opengis.net/def/crs/EPSG/0/3045', 'http://www.opengis.net/def/crs/EPSG/0/3046', 'http://www.opengis.net/def/crs/EPSG/0/3047', 'http://www.opengis.net/def/crs/EPSG/0/3048', 'http://www.opengis.net/def/crs/EPSG/0/3049', 'http://www.opengis.net/def/crs/EPSG/0/3050', 'http://www.opengis.net/def/crs/EPSG/0/3051', 'http://www.opengis.net/def/crs/EPSG/0/5730', 'http://www.opengis.net/def/crs/EPSG/0/7409')

let $featuresWithErrors := $featuresToInspect[.//@srsName[not(. = $crsuris)]][position() le $limitErrors]
return
  (local:statistics-info($featuresWithErrors),
  for $feature in $featuresWithErrors
   order by $feature/@gml:id
   let $srsname := $feature//@srsName[not(. = $crsuris)][1]
   return
    local:object-message($feature, concat('A spatial geometry uses an unexpected coordinate reference system ''',$srsname,'''. Please refer to table 2 of the data specification for the list of expected coordinate reference systems.')))</expression>
  </Assertion>
  <Assertion enabled="true" id="hy-n-rs.spatial.featurecollections" mode="global" severity="error">
    <label>Spatial coordinate reference system references in feature collections</label>
    <description>Verify that all references to coordinate reference systems in the bounding box of a feature collection uses one of the approved http URIs, i.e. check that the srsName XML attributes are one of the URIs listed in TG requirement 2, otherwise report unknownCRS2. Note that additional values will be added to the list for regions outside of continental Europe, if nominated by a Member State and available in a CRS register with a persistent http URI.</description>
    <requirement ref="hy_ir_ii_s1_2"/>
    <requirement ref="hy_ir_ii_s1_3"/>
    <requirement ref="hy_ir_ii_s1_5_1"/>
    <requirement ref="hy_ir_ii_s1_5_2"/>
    <requirement ref="hy_tg_2"/>
    <expression>let $crsuris := (
'http://www.opengis.net/def/crs/EPSG/0/4936', 'http://www.opengis.net/def/crs/EPSG/0/4937', 'http://www.opengis.net/def/crs/EPSG/0/4258', 'http://www.opengis.net/def/crs/EPSG/0/3035', 'http://www.opengis.net/def/crs/EPSG/0/3034', 'http://www.opengis.net/def/crs/EPSG/0/3038', 'http://www.opengis.net/def/crs/EPSG/0/3039', 'http://www.opengis.net/def/crs/EPSG/0/3040', 'http://www.opengis.net/def/crs/EPSG/0/3041', 'http://www.opengis.net/def/crs/EPSG/0/3042', 'http://www.opengis.net/def/crs/EPSG/0/3043', 'http://www.opengis.net/def/crs/EPSG/0/3044', 'http://www.opengis.net/def/crs/EPSG/0/3045', 'http://www.opengis.net/def/crs/EPSG/0/3046', 'http://www.opengis.net/def/crs/EPSG/0/3047', 'http://www.opengis.net/def/crs/EPSG/0/3048', 'http://www.opengis.net/def/crs/EPSG/0/3049', 'http://www.opengis.net/def/crs/EPSG/0/3050', 'http://www.opengis.net/def/crs/EPSG/0/3051', 'http://www.opengis.net/def/crs/EPSG/0/5730', 'http://www.opengis.net/def/crs/EPSG/0/7409')

let $filesWithErrors := $db[*/wfs:boundedBy/*/@srsName[not(. = $crsuris)] or */gml:boundedBy/*/@srsName[not(. = $crsuris)]][position() le $limitErrors] 
return
  (local:statistics-info-file($filesWithErrors,1),
  for $file in $filesWithErrors
  order by local:name($file)
  let $srsname := $file/*/*[local-name() = 'boundedBy']/*/@srsName[not(. = $crsuris)][1]
  return
    local:file-message($file, concat('The default coordinate reference system stated in the bounding box of the feature collection has an unexpected coordinate reference system ''',$srsname,'''. Please refer to table 2 of the data specification for the list of expected coordinate reference systems.')))</expression>
  </Assertion>
  <TestCase id="hy-n-rs.temporal">
    <label>Temporal coordinate reference system</label>
    <description>Verify that all references to temporal coordinate reference systems are using one of the http URIs approved for use in INSPIRE data sets.</description>
    <requirement ref="hy_ir_a11_1"/>
    <version>0.1</version>
    <author>interactive instruments GmbH</author>
    <creationDate>2016-05-02</creationDate>
    <lastEditor>interactive instruments GmbH</lastEditor>
    <lastUpdateDate>2016-05-29</lastUpdateDate>
  </TestCase>
  <Assertion enabled="true" id="hy-n-rs.temporal.features" mode="global" severity="error">
    <label>Temporal coordinate reference system references in features</label>
    <description>Verify that all references to coordinate reference systems in the features use one of the approved http URIs, i.e. check that all references to coordinate reference systems in the frame XML attributes in the features use the URI 'http://www.opengis.net/def/trs/ISO-8601/'. Otherwise report unknownTRS. Note that all values in the XML Schema date/time types is automatically in the required reference system. This test case may be removed for this application schema as no TM objects from ISO 19108 are used in the schema.</description>
    <requirement ref="hy_ir_a11_1"/>
    <expression>let $featuresToInspect := $features[self::hy-n:HydroNode|self::hy-n:WatercourseLink|self::hy-n:WatercourseLinkSequence|self::hy-n:WatercourseSeparatedCrossing|self::hy-n3:HydroNode|self::hy-n3:WatercourseLink|self::hy-n3:WatercourseLinkSequence|self::hy-n3:WatercourseSeparatedCrossing] (: extend with subtypes :) 
let $crsuris := ( 'http://www.opengis.net/def/trs/ISO-8601' )

let $featuresWithErrors := $featuresToInspect[.//gml:TimeInstance/@frame[not(. = $crsuris)] | .//gml:TimeInstance/gml:timePosition/@frame[not(. = $crsuris)] | .//gml:TimePeriod/@frame[not(. = $crsuris)] | .//gml:TimePeriod/gml:beginPosition/@frame[not(. = $crsuris)] | .//gml:TimePeriod/gml:endPosition/@frame[not(. = $crsuris)]][position() le $limitErrors]
return
  (local:statistics-info($featuresWithErrors),
  for $feature in $featuresWithErrors
   order by $feature/@gml:id
   let $frame := $feature//@frame[not(. = $crsuris)][1]
   return
    local:object-message($feature, concat('A temporal geometry uses an unexpected coordinate reference system ''',$frame,'''. Only ''http://www.opengis.net/def/trs/ISO-8601/'' is allowed for this feature type.')))</expression>
  </Assertion>
  <TestCase id="hy-n-rs.uom">
    <label>Units of measurement</label>
    <description>Verify that measurements use an allowed unit.</description>
    <requirement ref="hy_ir_a12_2"/>
    <version>0.1</version>
    <author>interactive instruments GmbH</author>
    <creationDate>2016-05-02</creationDate>
    <lastEditor>interactive instruments GmbH</lastEditor>
    <lastUpdateDate>2016-05-29</lastUpdateDate>
  </TestCase>
  <Assertion enabled="true" id="hy-n-rs.uom.features" mode="global" severity="error">
    <label>Units of measurements used in features</label>
    <description>Verify that all references to a unit of measurement uses one of the approved http URIs or values from the UCUM dictionary. In the features, check all unit of measurement values. Verify that all values of the attribute @uom to be one of the approved http URIs or values from the UCUM dictionary for the feature types of this application schema. Note that this list has to be compiled for this application schema. Otherwise report unknownUoM. </description>
    <requirement ref="hy_ir_a11_1"/>
    <expression>let $featuresToInspect := $features[self::hy-n:HydroNode|self::hy-n:WatercourseLink|self::hy-n:WatercourseLinkSequence|self::hy-n:WatercourseSeparatedCrossing|self::hy-n3:HydroNode|self::hy-n3:WatercourseLink|self::hy-n3:WatercourseLinkSequence|self::hy-n3:WatercourseSeparatedCrossing] (: extend with subtypes :) 
let $uoms := ( 'm', '...' )

let $featuresWithErrors := $featuresToInspect[.//*[self::hy:* | self::hy-n:* | self::net:* | self::base:* | self::hy3:* | self::hy-n3:* | self::net3:* | self::base3:*]/@uom[not(. = $uoms)]][position() le $limitErrors]
return
  (local:statistics-info($featuresWithErrors),
  for $feature in $featuresWithErrors
   order by $feature/@gml:id
   let $uom := $feature//*[self::hy:* | self::hy-n:* | self::net:* | self::base:* | self::hy3:* | self::hy-n3:* | self::net3:* | self::base3:*]/@uom[not(. = $uoms)][1]
   return
    local:object-message($feature, concat('A measurement value has an unexpected unit ''',$uom,'''. Valid values for this application schema  are: ...')))</expression>
  </Assertion>
  <TestSuite id="hy-n-dc">
    <label>Conformance class "Data Consistency, Hydrography - Network 3.1"</label>
    <description>Examine the spatial data set against the requirements related to the consistency of the data.<br/><br/>To be able to test this conformance class, the encoding of the data set must be known, i.e. this is a parameterized conformance class. This test suite assumes that the GML encoding is used and has an indirect dependency to the conformance class "GML application schema for Hydrography - Network 3.0/4.0".</description>
    <testObjectType>spatial data set</testObjectType>
    <dependency type="indirect" ref="gml-hy-n"/>
    <identifier>http://inspire.ec.europa.eu/conformance-class/ir/hy/dc/hy-n</identifier>
    <version>0.1</version>
    <author>interactive instruments GmbH</author>
    <creationDate>2016-05-02</creationDate>
    <lastEditor>interactive instruments GmbH</lastEditor>
    <lastUpdateDate>2016-05-29</lastUpdateDate>
  </TestSuite>
  <TestCase id="hy-n-dc.versions">
    <label>Consistency over time</label>
    <description>Verify that the information about a spatial object is consistent over time.</description>
    <requirement ref="hy_ir_a9_1"/>
    <requirement ref="hy_ir_a9_2"/>
    <version>0.1</version>
    <author>interactive instruments GmbH</author>
    <creationDate>2016-05-02</creationDate>
    <lastEditor>interactive instruments GmbH</lastEditor>
    <lastUpdateDate>2016-05-29</lastUpdateDate>
  </TestCase>
  <Assertion enabled="manual" id="hy-n-dc.versions.identifiers-persistent" mode="global" severity="error">
    <label>Unique identifier persistency</label>
    <description>Verify that identifiers are persistent for a spatial object, i.e. inspect the documentation of the spatial data set and verify that rules for identifiers are specified in a way that the identifiers (namespace and localId) do not change during the life-cycle of a spatial object. If older versions of the data set are available compare the features and verify that the namespace and localId part of the INSPIRE identifiers have not changed between the versions.</description>
    <requirement ref="hy_ir_a10_3"/>
    <expression>Manual test</expression>
  </Assertion>  
  <Assertion enabled="manual" id="hy-n-dc.versions.types-stable" mode="global" severity="error">
    <label>Spatial object type stable</label>
    <description>Verify that the type of a spatial object is unchanged for different versions, i.e. inspect the documentation of the spatial data set and verify that rules for the mapping to the INSPIRE application schema are specified in a way that the spatial object type do not change during its life-cycle. If older versions of the data set are available compare the features and verify that the types of the features has not changed between the versions.</description>
    <requirement ref="hy_ir_a9_2"/>
    <expression>Manual test</expression>
  </Assertion>
  <Assertion enabled="true" id="hy-n-dc.versions.life-cycle-time" mode="global" severity="error">
    <label>Life-cycle time sequence</label>
    <description>Verify that the value of the attribute beginLifespanVersion refers to an earlier moment of time than the value of the attribute endLifespanVersion for every spatial object where these properties are specified. Compare the value of the properties beginLifespanVersion and endLifespanVersion, if available and not void. The test is passed when the beginLifespanVersion value is before endLifespanVersion value for each instance of all spatial object types for which this property has been defined. Otherwise report endTooEarly.</description>
    <requirement ref="hy_ir_a10_3"/>
    <expression>let $featuresToInspect := $features[self::hy-n:HydroNode|self::hy-n:WatercourseLink|self::hy-n:WatercourseLinkSequence|self::hy-n:WatercourseSeparatedCrossing|self::hy-n3:HydroNode|self::hy-n3:WatercourseLink|self::hy-n3:WatercourseLinkSequence|self::hy-n3:WatercourseSeparatedCrossing] (: extend with subtypes :) 

let $featuresWithErrors := $featuresToInspect[(*[self::net:beginLifespanVersion and not(xsi:nil='true')] and *[self::net:endLifespanVersion and not(xsi:nil='true')] and xs:dateTime(net:beginLifespanVersion/text()) >= xs:dateTime(net:endLifespanVersion/text())) or (*[self::net3:beginLifespanVersion and not(xsi:nil='true')] and *[self::net3:endLifespanVersion and not(xsi:nil='true')] and xs:dateTime(net3:beginLifespanVersion/text()) >= xs:dateTime(net3:endLifespanVersion/text()))][position() le $limitErrors]
return
  (local:statistics-info($featuresWithErrors),
  for $feature in $featuresWithErrors
   order by $feature/@gml:id
   let $begin := $feature/*[self::net:beginLifespanVersion|self::net3:beginLifespanVersion][1]/text()
   let $end := $feature/*[self::net:endLifespanVersion|self::net3:endLifespanVersion][1]/text()
   return
    local:object-message($feature, concat('The lifespan of the feature ends before it begins (property ''endLifespanVersion'': ''',$end,''', property ''beginLifespanVersion: ''',$begin,'''). This is logically incorrect.')))</expression>
  </Assertion>
  <TestCase id="hy-n-dc.temporal">
    <label>Temporal consistency</label>
    <description>Verify that the temporal validity of the real-world entity is consistent. Note: The test case can be removed for this application schema as no feature has validTo/validFrom.</description>
    <requirement ref="hy_ir_a12_3"/>
    <version>0.1</version>
    <author>interactive instruments GmbH</author>
    <creationDate>2016-05-02</creationDate>
    <lastEditor>interactive instruments GmbH</lastEditor>
    <lastUpdateDate>2016-05-29</lastUpdateDate>
  </TestCase>
  <Assertion enabled="true" id="hy-n-dc.temporal.life-cycle-time" mode="global" severity="error">
    <label>Validity time sequence</label>
    <description>Verify that the value of the attribute validFrom refers to an earlier moment of time than the value of the attribute validTo for every spatial object where these properties are specified, i.e. compare the value of the properties validFrom and validTo, if available and not void. The test is passed when the validFrom value is before validTo value for each instance of all spatial object types for which this property has been defined. Otherwise report endTooEarly.</description>
    <requirement ref="hy_ir_a12_3"/>
    <expression>let $featuresToInspect := $features[self::hy-n:HydroNode|self::hy-n:WatercourseLink|self::hy-n:WatercourseLinkSequence|self::hy-n:WatercourseSeparatedCrossing|self::hy-n3:HydroNode|self::hy-n3:WatercourseLink|self::hy-n3:WatercourseLinkSequence|self::hy-n3:WatercourseSeparatedCrossing] (: extend with subtypes :) 

let $featuresWithErrors := $featuresToInspect[*[self::*:validFrom and not(xsi:nil='true')] and *[self::*:validTo and not(xsi:nil='true')] and xs:dateTime(*:validFrom/text()) >= xs:dateTime(*:validTo/text())][position() le $limitErrors]
return
  (local:statistics-info($featuresWithErrors),
  for $feature in $featuresWithErrors
   order by $feature/@gml:id
   let $begin := $feature/*[self::*:validFrom][1]/text()
   let $end := $feature/*[self::*:validTo][1]/text()
   return
    local:object-message($feature, concat('The validity of the real-world entity ends before it begins (property ''validTo'': ''',$end,''', property ''validFrom: ''',$begin,'''). This is logically incorrect.')))</expression>
  </Assertion>  
  <TestCase id="hy-n-dc.spatial">
    <label>Spatial consistency</label>
    <description>Verify that the spatial information is consistent.</description>
    <requirement ref="hy_ir_ii_s8_7_1_1"/>
    <requirement ref="hy_ir_ii_s8_7_1_2"/>
    <version>0.1</version>
    <author>interactive instruments GmbH</author>
    <creationDate>2016-05-02</creationDate>
    <lastEditor>interactive instruments GmbH</lastEditor>
    <lastUpdateDate>2016-05-29</lastUpdateDate>
  </TestCase>
  <Assertion enabled="true" id="hy-n-dc.spatial.representation" mode="global" severity="error">
    <label>Consistency between network and physical waters data</label>
    <description>Verify that the network and physical waters representations are consistent, if both a part of the data set, i.e. if the data set contains both WatercourseLink and SurfaceWater (Watercourse or StandingWater) features, verify for each WatercourseLink that its centerlineGeometry is within the geometry of a single Watercourse or StandingWater feature. Verify for each HydroNode that its geometry is within a Watercourse or StandingWater feature, too. Otherwise report notWithin1 or notWithin2.</description>
    <requirement ref="hy_ir_ii_s8_7_1_1"/>
    <expression>let $surfacewaters := $features[self::hy-p:Watercourse|self::hy-p:StandingWater|self::hy-p3:Watercourse|self::hy-p3:StandingWater] (: extend with subtypes :)
let $networkelements := $features[self::hy-n:WatercourseLink|self::hy-n3:WatercourseLink|self::hy-n:HydroNode|self::hy-n3:HydroNode] (: extend with subtypes :)

return
if (count($surfacewaters) = 0) 
then prof:time((),false(),'Test representation-consistency. No standing water features in the data set: ')
else

if (count($networkelements) = 0) 
then prof:time((),false(),'Test representation-consistency. No hydro network features in the data set: ')
else

(: Check dass relevante Objekte valide Geometrie besitzen :)
let $networkelements_invalid_geom := prof:time($networkelements[contains(ggeo:validate(.,'110'),'F')],false(),concat('Test representation-consistency: WatercourseLink validation (',count($networkelements),' features): '))
let $surfacewaters_invalid_geom := prof:time($surfacewaters[contains(ggeo:validate(.,'110'),'F')],false(),concat('Test representation-consistency: SurfaceWater validation (',count($surfacewaters),' features): '))
let $featuresWithInvalidGeometry := $networkelements_invalid_geom union $surfacewaters_invalid_geom
  
(: Bearbeitung nur für Objekte mit valider Geometrie :) 
let $networkelements_valid_geom := ($networkelements except $networkelements_invalid_geom)
let $surfacewaters_valid_geom := ($surfacewaters except $surfacewaters_invalid_geom)

let $networkelements_geometryMap := prof:time(map:new(
  for $networkelement in $networkelements_valid_geom
  return map { $networkelement/@gml:id : ggeo:parseGeometry($networkelement/*/*[self::gml:*][1]) }
),false(),concat('Test representation-consistency: Parsing network geometries (',count($networkelements_valid_geom),' features): '))
let $surfacewaters_geometryMap := prof:time(map:new(
  for $surfacewater in $surfacewaters_valid_geom
  return map { $surfacewater/@gml:id : ggeo:parseGeometry($surfacewater/*/*[self::gml:*][1]) }
),false(),concat('Test representation-consistency: Parsing surface water geometries. (',count($surfacewaters_valid_geom),' features): '))

let $featuresWithErrors := prof:time($networkelements_valid_geom[not(ggeo:isWithin(map:get($networkelements_geometryMap,./@gml:id),for-each($surfacewaters_valid_geom/@gml:id,$surfacewaters_geometryMap),false()))][position() le $limitErrors],false(),'Test representation-consistency: Identifying network elements not inside a surface water: ')
  
return
  (local:statistics-info($featuresWithErrors),
  for $feature in $featuresWithErrors
   order by $feature/@gml:id
   return
    local:object-message($feature, 'The geometry is not within a single SurfaceWater feature from the Physical Waters application schema.'))</expression>
  </Assertion>
  <Assertion enabled="manual" id="hy-n-dc.spatial.at-borders" mode="global" severity="error">
    <label>Consistency at borders</label>
    <shortDescription>Verify that hydrographic networks are spatially connected across data sets.</shortDescription>
    <description>Review the data maintenance procedures and perform spot checks to verify that connectivity between hydrographic networks across state borders and – where applicable – also across regional borders (and data sets) within Member States is established and maintained by the respective authorities, using the cross-border connectivity mechanisms provided by the NetworkConnection type.</description>
    <requirement ref="hy_ir_ii_s8_7_1_2"/>
    <expression>Manual test</expression>
  </Assertion>
  <TestCase id="hy-n-dc.thematic">
    <label>Thematic consistency</label>
    <description>Verify that the thematic information is consistent.</description>
    <requirement ref="hy_ir_ii_s8_7_1_3"/>
    <version>0.1</version>
    <author>interactive instruments GmbH</author>
    <creationDate>2016-05-02</creationDate>
    <lastEditor>interactive instruments GmbH</lastEditor>
    <lastUpdateDate>2016-05-29</lastUpdateDate>
  </TestCase>
  <Assertion enabled="manual" id="hy-n-dc.thematic.wfd-consistency" mode="global" severity="error">
    <label>Consistency with Water Framework Directive reporting</label>
    <description>Verify that attributes are consistent with the reporting under the Water Framework Directive, i.e. review for each feature that all attribution is the same as the equivalent property of that object used for reporting obligations under Directive 2000/60/EC.</description>
    <requirement ref="hy_ir_ii_s8_7_1_3"/>
    <expression>Manual test</expression>
  </Assertion>
  <TestCase id="hy-n-dc.identifiers">
    <label>Identifier management</label>
    <description>Verify that identifiers are managed properly.</description>
    <requirement ref="hy_ir_ii_s8_7_2_1"/>
    <requirement ref="hy_ir_ii_s8_7_2_2"/>
    <version>0.1</version>
    <author>interactive instruments GmbH</author>
    <creationDate>2016-05-02</creationDate>
    <lastEditor>interactive instruments GmbH</lastEditor>
    <lastUpdateDate>2016-05-29</lastUpdateDate>
  </TestCase>
  <Assertion enabled="manual" id="hy-n-dc.identifiers.reuse-names" mode="global" severity="error">
    <label>Reuse of existing names</label>
    <description>Verify that identifiers are reusing authoritative, pan-European sources, i.e. review for each feature that, if a geographical name is used as a unique hydrologic ID for an object in this specification that it is derived, where possible, from a pan-European Gazetteer or another authoritative, pan-European source.</description>
    <requirement ref="hy_ir_ii_s8_7_2_1"/>
    <expression>Manual test</expression>
  </Assertion>
  <Assertion enabled="manual" id="hy-n-dc.identifiers.wfd-consistency" mode="global" severity="error">
    <label>Consistency with Water Framework Directive reporting</label>
    <description>Verify that identifiers are consistent with the reporting under the Water Framework Directive, i.e. review for each feature that the localId attribute of the external object identifier is the same as the ID used for reporting obligations under Directive 2000/60/EC.</description>
    <requirement ref="hy_ir_ii_s8_7_2_2"/>
    <expression>Manual test</expression>
  </Assertion>
  <TestSuite id="hy-n-ia">
    <label>Conformance class "Information Accessibility, Hydrography - Network 3.1"</label>
    <description>Examine the spatial data set against the requirements related to the accessibility of information stored in registries (code lists, coordinate reference systems).<br/><br/>To be able to test this conformance class, the encoding of the data set must be known, i.e. this is a parameterized conformance class. This test suite assumes that the GML encoding is used and has an indirect dependency to the conformance class "GML application schema for Hydrography - Network 3.0/4.0".</description>
    <testObjectType>spatial data set</testObjectType>
    <dependency type="indirect" ref="gml-hy-n"/>
    <identifier>http://inspire.ec.europa.eu/conformance-class/ir/hy/rs/hy-n</identifier>
    <version>0.1</version>
    <author>interactive instruments GmbH</author>
    <creationDate>2016-05-02</creationDate>
    <lastEditor>interactive instruments GmbH</lastEditor>
    <lastUpdateDate>2016-05-29</lastUpdateDate>
  </TestSuite>
  <TestCase id="hy-n-ia.code-list">
    <label>Access to code list extensions</label>
    <description>Verify that code lists extensions can be accessed.</description>
    <requirement ref="hy_ir_a6_3"/>
    <version>0.1</version>
    <author>interactive instruments GmbH</author>
    <creationDate>2016-05-02</creationDate>
    <lastEditor>interactive instruments GmbH</lastEditor>
    <lastUpdateDate>2016-05-29</lastUpdateDate>
  </TestCase>
  <Assertion enabled="true" id="hy-n-ia.code-list.in-register" mode="global" severity="error">
    <label>Code list extensions</label>
    <description>Verify that any code list extensions are publicly accessible via HTTP, i.e. inspect extensible code list valued property elements. If a reference (@xlink:href) has a value that does not start with http://inspire.ec.europa.eu/codelist/, verify that the URI resolves. Note that this assertion can be removed as the application schema does not specify any extensible code lists.</description>
    <requirement ref="hy_ir_a6_3"/>
    <expression>()</expression>
  </Assertion>
  <TestCase id="hy-n-ia.crs">
    <label>Access to coordinate reference systems</label>
    <description>Verify that referenced coordinate reference systems can be accessed.</description>
    <requirement ref="hy_ir_ii_s1_3_4"/>
    <requirement ref="hy_ir_ii_s1_5_1"/>
    <requirement ref="hy_ir_ii_s1_5_2"/>
    <version>0.1</version>
    <author>interactive instruments GmbH</author>
    <creationDate>2016-05-02</creationDate>
    <lastEditor>interactive instruments GmbH</lastEditor>
    <lastUpdateDate>2016-05-29</lastUpdateDate>
  </TestCase>
  <Assertion enabled="true" id="hy-n-ia.crs.in-register" mode="global" severity="error">
    <label>Coordinate reference systems</label>
    <description>Verify that any coordinate reference system is publicly accessible via HTTP, i.e. inspect links to coordinate reference systems. Verify that each link (@srsName, @frame) resolves to a definition of the reference system. Otherwise report doesNotResolve.</description>
    <requirement ref="hy_ir_ii_s1_3_4"/>
    <requirement ref="hy_ir_ii_s1_5_1"/>
    <requirement ref="hy_ir_ii_s1_5_2"/>
    <expression>let $featuresToInspect := $features[self::hy-n:HydroNode|self::hy-n:WatercourseLink|self::hy-n:WatercourseLinkSequence|self::hy-n:WatercourseSeparatedCrossing|self::hy-n3:HydroNode|self::hy-n3:WatercourseLink|self::hy-n3:WatercourseLinkSequence|self::hy-n3:WatercourseSeparatedCrossing] (: extend with subtypes :) 

let $uris := distinct-values(($featuresToInspect//@srsName,$featuresToInspect//@frame))

let $baduris := for $uri in $uris
return
 if (doc-available($uri)) then () else $uri
 
let $featuresWithErrors := $featuresToInspect[.//@srsName[. = $baduris] or .//@frame[. = $baduris]][position() le $limitErrors]
return
  (local:statistics-info($featuresWithErrors),
  for $feature in $featuresWithErrors
   order by $feature/@gml:id
   let $uri := ($feature//@srsName[. = $baduris]|$feature//@frame[. = $baduris])[1]
   return
    local:object-message($feature, concat('A spatial or temporal geometry uses an unexpected, unresolvable coordinate reference system with identifier ''',$uri,'''. Every URI must be a HTTP URI in a CRS register that resolves to a definition of the reference system.')))</expression>
  </Assertion>
  <Specification id="tg_hy_3_1">
    <label>INSPIRE Data Specification on Hydrography – Technical Guidelines version 3.1</label>
    <description>This document describes the INSPIRE Data Specification for the spatial data theme Hydrography</description>
    <reference>http://inspire.jrc.ec.europa.eu/documents/Data_Specifications/INSPIRE_DataSpecification_HY_v3.1.pdf</reference>
    <version>3.1</version>
    <author>INSPIRE Thematic Working Group Hydrography</author>
    <creationDate>2014-04-17</creationDate>
  </Specification>
  <Requirement id="hy_ir_a3">
    <label>IR Requirement Article 3: Common Types</label>
    <description>Types that are common to several of the themes listed in Annexes I, II and III to Directive 2007/2/EC shall conform to the definitions and constraints and include the attributes and association roles set out in Annex I.</description>
    <specification ref="tg_hy_3_1"/>
  </Requirement>
  <Requirement id="hy_ir_a4_1">
    <label>IR Requirement Article 4 (1): Types for the Exchange and Classification of Spatial Objects</label>
    <description>For the exchange and classification of spatial objects from data sets meeting the conditions laid down in Article 4 of Directive 2007/2/EC, Member States shall use the spatial object types and associated data types, enumerations and code lists that are defined in Annexes II, III and IV for the themes the data sets relate to.</description>
    <specification ref="tg_hy_3_1"/>
  </Requirement>
  <Requirement id="hy_ir_a4_2">
    <label>IR Requirement Article 4 (2): Types for the Exchange and Classification of Spatial Objects</label>
    <description>Spatial object types and data types shall comply with the definitions and constraints and include the attributes and association roles set out in the Annexes.</description>
    <specification ref="tg_hy_3_1"/>
  </Requirement>
  <Requirement id="hy_ir_a4_3">
    <label>IR Requirement Article 4 (3): Types for the Exchange and Classification of Spatial Objects</label>
    <description>The enumerations and code lists used in attributes or association roles of spatial object types or data types shall comply with the definitions and include the values set out in Annex II. The enumeration and code list values are uniquely identified by language-neutral mnemonic codes for computers. The values may also include a language-specific name to be used for human interaction.</description>
    <specification ref="tg_hy_3_1"/>
  </Requirement>
  <Requirement id="hy_ir_a5_2">
    <label>IR Requirement Article 5 (2): Types</label>
    <description>Types that are a sub-type of another type shall also include all this type‘s attributes and association roles.</description>
    <specification ref="tg_hy_3_1"/>
  </Requirement>
  <Requirement id="hy_ir_a5_3">
    <label>IR Requirement Article 5 (3): Types</label>
    <description>Abstract types shall not be instantiated.</description>
    <specification ref="tg_hy_3_1"/>
  </Requirement>
  <Requirement id="hy_ir_a6_1">
    <label>IR Requirement Article 6 (1): Code Lists and Enumerations</label>
    <description>Codelists shall be of one of the following types, as specified in the Annexes:
a) code lists whose allowed values comprise only the values specified in this Regulation;
b) code lists whose allowed values comprise the values specified in this Regulation and
narrower values defined by data providers;
c) code lists whose allowed values comprise the values specified in this Regulation and
additional values at any level defined by data providers;
d) code lists, whose allowed values comprise any values defined by data providers.
For the purposes of points (b), (c) and (d), in addition to the allowed values, data providers may use the values specified in the relevant INSPIRE Technical Guidance document available on the INSPIRE web site of the Joint Research Centre.</description>
    <specification ref="tg_hy_3_1"/>
  </Requirement>
  <Requirement id="hy_ir_a6_2">
    <label>IR Requirement Article 6 (2): Code Lists and Enumerations</label>
    <description>Code lists may be hierarchical. Values of hierarchical code lists may have a more generic parent value. Where the valid values of a hierarchical code list are specified in a table in this Regulation, the parent values are listed in the last column.</description>
    <specification ref="tg_hy_3_1"/>
  </Requirement>
  <Requirement id="hy_ir_a6_3">
    <label>IR Requirement Article 6 (3): Code Lists and Enumerations</label>
    <description>Where, for an attribute whose type is a code list as referred to in points (b), (c) or (d) of paragraph 1, a data provider provides a value that is not specified in this Regulation, that value and its definition shall be made available in a register.</description>
    <specification ref="tg_hy_3_1"/>
  </Requirement>
  <Requirement id="hy_ir_a6_4">
    <label>IR Requirement Article 6 (4): Code Lists and Enumerations</label>
    <description>Attributes or association roles of spatial object types or data types whose type is a code list may only take values that are allowed according to the specification of the code list.</description>
    <specification ref="tg_hy_3_1"/>
  </Requirement>
  <Requirement id="hy_ir_a6_5">
    <label>IR Requirement Article 6 (5): Code Lists and Enumerations</label>
    <description>Attributes or association roles of spatial object types or data types that have an enumeration type may only take values from the lists specified for the enumeration type.</description>
    <specification ref="tg_hy_3_1"/>
  </Requirement>
  <Requirement id="hy_ir_a7_1">
    <label>IR Requirement Article 7 (1): Encoding</label>
    <description>Every encoding rule used to encode spatial data shall conform to EN ISO 19118. In particular, it shall specify schema conversion rules for all spatial object types and all attributes and association roles and the output data structure used.</description>
    <specification ref="tg_hy_3_1"/>
  </Requirement>
  <Requirement id="hy_ir_a7_2">
    <label>IR Requirement Article 7 (2): Encoding</label>
    <description>Every encoding rule used to encode spatial data shall be made available.</description>
    <specification ref="tg_hy_3_1"/>
  </Requirement>
  <Requirement id="hy_ir_a8_1">
    <label>IR Requirement Article 8 (1): Updates</label>
    <description>Member States shall make available updates of data on a regular basis.</description>
    <specification ref="tg_hy_3_1"/>
  </Requirement>
  <Requirement id="hy_ir_a8_2">
    <label>IR Requirement Article 8 (2): Updates</label>
    <description>All updates shall be made available at the latest 6 months after the change was applied in the source data set.</description>
    <specification ref="tg_hy_3_1"/>
  </Requirement>
  <Requirement id="hy_ir_a9_1">
    <label>IR Requirement Article 9 (1): Identifier Management</label>
    <description>The data type Identifier defined in Section 2.1 of Annex I shall be used as a type for the external object identifier of a spatial object.</description>
    <specification ref="tg_hy_3_1"/>
  </Requirement>
  <Requirement id="hy_ir_a9_2">
    <label>IR Requirement Article 9 (2): Identifier Management</label>
    <description>The external object identifier for the unique identification of spatial objects shall not be changed during the life-cycle of a spatial object.</description>
    <specification ref="tg_hy_3_1"/>
  </Requirement>
  <Requirement id="hy_ir_a10_3">
    <label>IR Requirement Article 10 (3): Life-cycle of Spatial Objects</label>
    <description>Where the attributes beginLifespanVersion and endLifespanVersion are used, the value of endLifespanVersion shall not be before the value of beginLifespanVersion.</description>
    <specification ref="tg_hy_3_1"/>
  </Requirement>
  <Requirement id="hy_ir_a11_1">
    <label>IR Requirement Article 11 (1): Temporal Reference Systems
</label>
    <description>The default temporal reference system referred to in point 5 of part B of the Annex to Commission Regulation (EC) No 1205/2008 (14) shall be used, unless other temporal reference systems are specified for a specific spatial data theme in Annex II.
</description>
    <specification ref="tg_hy_3_1"/>
  </Requirement>
  <Requirement id="hy_ir_a12_1">
    <label>IR Requirement Article 12 (1): Other Requirements and Rules</label>
    <description>The value domain of spatial properties defined in this Regulation shall be restricted to the Simple Feature spatial schema as defined in Herring, John R. (ed.), OpenGIS® Implementation Standard for Geographic information – Simple feature access – Part 1: Common architecture, version 1.2.1, Open Geospatial Consortium, 2011, unless specified otherwise for a specific spatial data theme or type.</description>
    <specification ref="tg_hy_3_1"/>
  </Requirement>
  <Requirement id="hy_ir_a12_2">
    <label>IR Requirement Article 12 (2): Other Requirements and Rules</label>
    <description>All measurement values shall be expressed using SI units or non-SI units accepted for use with the International System of Units, unless specified otherwise for a specific spatial data theme or type.</description>
    <specification ref="tg_hy_3_1"/>
  </Requirement>
  <Requirement id="hy_ir_a12_3">
    <label>IR Requirement Article 12 (3): Other Requirements and Rules</label>
    <description>Where the attributes validFrom and validTo are used, the value of validTo shall not be before the value of validFrom.</description>
    <specification ref="tg_hy_3_1"/>
  </Requirement>
  <Requirement id="hy_ir_a13">
    <label>IR Requirement Article : Metadata required for Interoperability</label>
    <description>The metadata describing a spatial data set shall include the following metadata elements required for interoperability:
<li>Coordinate Reference System: Description of the coordinate reference system(s) used in the data set.</li>
<li>Temporal Reference System: Description of the temporal reference system(s) used in the data set. This element is mandatory only if the spatial data set contains temporal information that does not refer to the default temporal reference system.</li>
<li>Encoding: Description of the computer language construct(s) specifying the representation of data objects in a record, file, message, storage device or transmission channel.</li>
<li>Topological Consistency: Correctness of the explicitly encoded topological characteristics of the data set as described by the scope. This element is mandatory only if the data set includes types from the Generic Network Model and does not assure centreline topology (connectivity of centrelines) for the network.</li>
<li>Character Encoding: The character encoding used in the data set. This element is mandatory only if an encoding is used that is not based on UTF-8.</li>
<li>Spatial Representation Type: The method used to spatially represent geographic information.</li></description>
    <specification ref="tg_hy_3_1"/>
  </Requirement>
  <Requirement id="hy_ir_a14_1">
    <label>IR Requirement Article 14 (1): Portrayal</label>
    <description>For the portrayal of spatial data sets using a view network service as specified in Commission Regulation No 976/2009 (16), the following shall be available: the layers specified in Annex II for the theme or themes the data set is related to and for each layer at least a default portrayal style, with as a minimum an associated title and a unique identifier.</description>
    <specification ref="tg_hy_3_1"/>
  </Requirement>
  <Requirement id="hy_ir_a14_2">
    <label>IR Requirement Article 14 (2): Portrayal</label>
    <description>For each layer, Annex II defines the following: a human readable title of the layer to be used for display in user interface and the spatial object type(s), or sub-set thereof, that constitute(s) the content of the layer.</description>
    <specification ref="tg_hy_3_1"/>
  </Requirement>
  <Requirement id="hy_ir_ii_s1_2">
    <label>IR Requirement Annex II Section 1.2: Datum for three-dimensional and two-dimensional coordinate reference systems</label>
    <description>For the three-dimensional and two-dimensional coordinate reference systems and the horizontal component of compound coordinate reference systems used for making spatial data sets available, the datum shall be the datum of the European Terrestrial Reference System 1989 (ETRS89) in areas within its geographical scope, or the datum of the International Terrestrial Reference System (ITRS) or other geodetic coordinate reference systems compliant with ITRS in areas that are outside the geographical scope of ETRS89. Compliant with the ITRS means that the system definition is based on the definition of the ITRS and there is a well documented relationship between both systems, according to EN ISO 19111.</description>
    <specification ref="tg_hy_3_1"/>
  </Requirement>
  <Requirement id="hy_ir_ii_s1_3">
    <label>IR Requirement Annex II Section 1.3: Datum for three-dimensional and two-dimensional coordinate reference systems</label>
    <description>Spatial data sets shall be made available using at least one of the coordinate reference systems:
<li>Two-dimensional geodetic coordinates (latitude and longitude) based on a datum specified in 1.2 and using the parameters of the GRS80 ellipsoid.</li>
<li>Plane coordinates using the ETRS89 Lambert Azimuthal Equal Area coordinate reference system.</li>
<li>Plane coordinates using the ETRS89 Lambert Conformal Conic coordinate reference system.</li>
<li>Plane coordinates using the ETRS89 Transverse Mercator coordinate reference system.</li>
<li>Compound coordinate reference system using one of the systems above plus, for the vertical component, one of the following coordinate reference systems shall be used:</li>
<ul>
<li>For the vertical component on land, the European Vertical Reference System (EVRS) shall be used to express gravity-related heights within its geographical scope. Other vertical reference systems related to the Earth gravity field shall be used to express gravity-related heights in areas that are outside the geographical scope of EVRS.</li>
<li>For the vertical component in the free atmosphere, barometric pressure, converted to height using ISO 2533:1975 International Standard Atmosphere, or other linear or parametric reference systems shall be used. Where other parametric reference systems are used, these shall be described in an accessible reference using EN ISO 19111-2:2012.</li>
<li>For the vertical component in marine areas where there is an appreciable tidal range (tidal waters), the Lowest Astronomical Tide (LAT) shall be used as the reference surface.</li>
<li>For the vertical component in marine areas without an appreciable tidal range, in open oceans and effectively in waters that are deeper than 200 meters, the Mean Sea Level (MSL) or a well- defined reference level close to the MSL shall be used as the reference surface.</li>
</ul>
<li>Three-dimensional Cartesian coordinates based on a datum specified in 1.2 and using the parameters of the Geodetic Reference System 1980 (GRS80) ellipsoid.</li>
<li>Three-dimensional geodetic coordinates (latitude, longitude and ellipsoidal height) based on a datum specified in 1.2 and using the parameters of the GRS80 ellipsoid.</li>
<li>For regions outside of continental Europe, Member States may define suitable coordinate reference systems. The geodetic codes and parameters needed to describe these coordinate reference systems and to allow conversion and transformation operations shall be documented and an identifier shall be created, according to EN ISO 19111 and ISO 19127.</li></description>
    <specification ref="tg_hy_3_1"/>
  </Requirement>
  <Requirement id="hy_ir_ii_s1_4">
    <label>IR Requirement Annex II Section 1.4: Coordinate Reference Systems used in the View Network Service</label>
    <description>For the display of spatial data sets with the view network service as specified in Regulation No 976/2009, at least the coordinate reference systems for two-dimensional geodetic coordinates (latitude, longitude) shall be available.</description>
    <specification ref="tg_hy_3_1"/>
  </Requirement>
  <Requirement id="hy_ir_ii_s1_5_1">
    <label>IR Requirement Annex II Section 1.5 (1): Coordinate Reference System Identifiers</label>
    <description>Coordinate reference system parameters and identifiers shall be managed in one or several common registers for coordinate reference systems.</description>
    <specification ref="tg_hy_3_1"/>
  </Requirement>
  <Requirement id="hy_ir_ii_s1_5_2">
    <label>IR Requirement Annex II Section 1.5 (2): Coordinate Reference System Identifiers</label>
    <description>Only identifiers contained in a common register shall be used for referring to the coordinate reference systems listed in this Section.</description>
    <specification ref="tg_hy_3_1"/>
  </Requirement>
  <Requirement id="hy_ir_ii_s8_7_1_1">
    <label>IR Requirement Annex II Section 8.7.1 (1): Theme-specific Requirements – Consistency between spatial data sets</label>
    <description>Hydrography links, centrelines and nodes shall always be located within the extent of the area representation of the same object.</description>
    <specification ref="tg_hy_3_1"/>
  </Requirement>
  <Requirement id="hy_ir_ii_s8_7_1_2">
    <label>IR Requirement Annex II Section 8.7.1 (2): Theme-specific Requirements – Consistency between spatial data sets</label>
    <description>Connectivity between hydrographic networks across state borders and – where applicable – also across regional borders (and data sets) within Member States shall be established and maintained by the respective authorities, using the cross-border connectivity mechanisms provided by the NetworkConnection type.</description>
    <specification ref="tg_hy_3_1"/>
  </Requirement>
  <Requirement id="hy_ir_ii_s8_7_1_3">
    <label>IR Requirement Annex II Section 8.7.1 (3): Theme-specific Requirements – Consistency between spatial data sets</label>
    <description>All attribution of objects in this schema shall be the same as the equivalent property of that object used for reporting obligations under Directive 2000/60/EC.</description>
    <specification ref="tg_hy_3_1"/>
  </Requirement>
  <Requirement id="hy_ir_ii_s8_7_2_1">
    <label>IR Requirement Annex II Section 8.7.2 (1): Theme-specific Requirements – Identifier management</label>
    <description>If a geographical name is used as a unique hydrologic ID for an object in this specification then it shall be derived, where possible, from a pan-European Gazetteer or another authoritative, pan-European source.</description>
    <specification ref="tg_hy_3_1"/>
  </Requirement>
  <Requirement id="hy_ir_ii_s8_7_2_2">
    <label>IR Requirement Annex II Section 8.7.2 (2): Theme-specific Requirements – Identifier management</label>
    <description>The localId attribute of the external object identifier of a spatial object shall be the same as the ID used for reporting obligations under Directive 2000/60/EC.</description>
    <specification ref="tg_hy_3_1"/>
  </Requirement>
  <Requirement id="hy_ir_ii_s8_7_3_1">
    <label>IR Requirement Annex II Section 8.7.3 (1): Theme-specific Requirements – Modelling of object references</label>
    <description>If the same real world object in a data set is exchanged using spatial objects from more than one of the Hydrography application schemas then these spatial objects shall carry either the same, unique, geographical name or the same hydrographic thematic identifier. Note: The IR Requirement has been included by mistake as a requirement in the Regulation on spatial data sets and services; in was originally a recommendation. It is planned to correct this mistake in a future update (amendment or corrigendum) of the Regulation.</description>
    <specification ref="tg_hy_3_1"/>
  </Requirement>
  <Requirement id="hy_ir_ii_s8_7_3_2">
    <label>IR Requirement Annex II Section 8.7.3 (2): Theme-specific Requirements – Modelling of object references</label>
    <description>When linear referencing is used in hydrographic Network data, the position of referenced properties on links and link sequences shall be expressed as distances measured along the supplied geometry of the underlying link object(s). Note: Linear referencing is not used in the INSPIRE application schemas for the theme Hydrography.</description>
    <specification ref="tg_hy_3_1"/>
  </Requirement>
  <Requirement id="hy_ir_ii_s8_7_4_1">
    <label>IR Requirement Annex II Section 8.7.4 (1): Theme-specific Requirements – Geometry representation</label>
    <description>If spatial objects are provided at different spatial resolutions, the spatial resolution must be specified for each spatial object using the levelOfDetail attribute where applicable.</description>
    <specification ref="tg_hy_3_1"/>
  </Requirement>
  <Requirement id="hy_ir_ii_s8_7_4_2">
    <label>IR Requirement Annex II Section 8.7.4 (2): Theme-specific Requirements – Geometry representation</label>
    <description>Watercourse links shall intersect wherever a connection exists between the real world phenomena they represent. No intersections shall be created at crossing network elements when it is not possible for water to pass from one element to another.</description>
    <specification ref="tg_hy_3_1"/>
  </Requirement>
  <Requirement id="hy_ir_ii_s8_7_4_3">
    <label>IR Requirement Annex II Section 8.7.4 (3): Theme-specific Requirements – Geometry representation</label>
    <description>In a hydrographic network data set which contains nodes, these nodes shall only be present where Watercourse Links connect or end.</description>
    <specification ref="tg_hy_3_1"/>
  </Requirement>
  <Requirement id="hy_ir_ii_s8_7_4_4">
    <label>IR Requirement Annex II Section 8.7.4 (4): Theme-specific Requirements – Geometry representation</label>
    <description>The geometry shall be the same as the geometry used for reporting obligations under Directive 2000/60/EC.</description>
    <specification ref="tg_hy_3_1"/>
  </Requirement>
  <Requirement id="hy_ir_ii_s8_7_5_1">
    <label>IR Requirement Annex II Section 8.7.5 (1): Theme-specific Requirements – Use of the DelineationKnown Attribute</label>
    <description>The attribute delineationKnown shall not be used to indicate that the accuracy / precision of a certain geometry is low; this indication should be given using the appropriate data quality element(s).</description>
    <specification ref="tg_hy_3_1"/>
  </Requirement>
  <Requirement id="hy_ir_ii_s8_7_5_2">
    <label>IR Requirement Annex II Section 8.7.5 (2): Theme-specific Requirements – Use of the DelineationKnown Attribute</label>
    <description>The attribute delineationKnown shall not be used to indicate a change of geometry over time where this change of geometry is known.</description>
    <specification ref="tg_hy_3_1"/>
  </Requirement>
  <Requirement id="hy_ir_ii_s8_7_6">
    <label>IR Requirement Annex II Section 8.7.6: Theme-specific Requirements – Centrelines</label>
    <description>The centrelines of watercourse objects shall fall within the extent of the physical real world object that they represent if the Watercourse Link is indicated as not being 'fictitious'.</description>
    <specification ref="tg_hy_3_1"/>
  </Requirement>
  <Requirement id="hy_ir_ii_s8_7_7_1">
    <label>IR Requirement Annex II Section 8.7.7 (1): Theme-specific Requirements – Ensuring Network Connectivity</label>
    <description>Wherever a connection exists in a hydrographic network, all connected link ends and the optional node that take part in this connection have to be positioned at a distance of less than the connectivity tolerance from each other.</description>
    <specification ref="tg_hy_3_1"/>
  </Requirement>
  <Requirement id="hy_ir_ii_s8_7_7_2">
    <label>IR Requirement Annex II Section 8.7.7 (2): Theme-specific Requirements – Ensuring Network Connectivity</label>
    <description>Link ends and nodes that are not connected shall always be separated by a distance that is greater than the connectivity tolerance.</description>
    <specification ref="tg_hy_3_1"/>
  </Requirement>
  <Requirement id="hy_ir_ii_s8_7_7_3">
    <label>IR Requirement Annex II Section 8.7.7 (3): Theme-specific Requirements – Ensuring Network Connectivity</label>
    <description>In data sets where both transport links and nodes are present, the relative position of nodes and link ends in relation to the specified connectivity tolerance shall correspond to the associations that exist between them in the data set.</description>
    <specification ref="tg_hy_3_1"/>
  </Requirement>
  <Requirement id="hy_tg_1">
    <label>TG Requirement 1</label>
    <description>Spatial object types and data types shall comply with the multiplicities defined for the attributes and association roles in this section.</description>
    <specification ref="tg_hy_3_1"/>
  </Requirement>
  <Requirement id="hy_tg_2">
    <label>TG Requirement 2</label>
    <description>The following identifiers shall be used for referring to the coordinate reference systems used in a data set:
<li>http://www.opengis.net/def/crs/EPSG/0/4936</li>
<li>http://www.opengis.net/def/crs/EPSG/0/4937</li>
<li>http://www.opengis.net/def/crs/EPSG/0/4258</li>
<li>http://www.opengis.net/def/crs/EPSG/0/3034</li>
<li>http://www.opengis.net/def/crs/EPSG/0/3035</li>
<li>http://www.opengis.net/def/crs/EPSG/0/3038</li>
<li>http://www.opengis.net/def/crs/EPSG/0/3039</li>
<li>http://www.opengis.net/def/crs/EPSG/0/3040</li>
<li>http://www.opengis.net/def/crs/EPSG/0/3041</li>
<li>http://www.opengis.net/def/crs/EPSG/0/3042</li>
<li>http://www.opengis.net/def/crs/EPSG/0/3043</li>
<li>http://www.opengis.net/def/crs/EPSG/0/3044</li>
<li>http://www.opengis.net/def/crs/EPSG/0/3045</li>
<li>http://www.opengis.net/def/crs/EPSG/0/3046</li>
<li>http://www.opengis.net/def/crs/EPSG/0/3047</li>
<li>http://www.opengis.net/def/crs/EPSG/0/3048</li>
<li>http://www.opengis.net/def/crs/EPSG/0/3049</li>
<li>http://www.opengis.net/def/crs/EPSG/0/3050</li>
<li>http://www.opengis.net/def/crs/EPSG/0/3051</li>
<li>http://www.opengis.net/def/crs/EPSG/0/5730</li>
<li>http://www.opengis.net/def/crs/EPSG/0/7409</li></description>
    <specification ref="tg_hy_3_1"/>
  </Requirement>
  <Requirement id="hy_tg_3">
    <label>TG Requirement 3</label>
    <description>Metadata instance (XML) documents shall validate without error against the used ISO 19139 XML schema.</description>
    <specification ref="tg_hy_3_1"/>
  </Requirement>
  <Requirement id="hy_tg_4">
    <label>TG Requirement 4</label>
    <description>Metadata instance (XML) documents shall contain the elements and meet the INSPIRE multiplicity specified in the sections below.</description>
    <specification ref="tg_hy_3_1"/>
  </Requirement>
  <Requirement id="hy_tg_5">
    <label>TG Requirement 5</label>
    <description>The elements specified below shall be available in the specified ISO/TS 19139 path.</description>
    <specification ref="tg_hy_3_1"/>
  </Requirement>
  <Requirement id="hy_tg_6">
    <label>TG Requirement 6</label>
    <description>Data instance (XML) documents shall validate without error against the provided XML schema.</description>
    <specification ref="tg_hy_3_1"/>
  </Requirement>
  <Requirement id="hy_tg_7">
    <label>TG Requirement 7</label>
    <description>For each layer specified in this section, the styles defined in section 11.2 shall be available.</description>
    <specification ref="tg_hy_3_1"/>
  </Requirement>
  <Specification id="d27_3_3">
    <label>INSPIRE Guidelines for the encoding of spatial data 3.3</label>
    <description>This document describes the INSPIRE guidelines for the encoding of spatial data</description>
    <reference>http://inspire.jrc.ec.europa.eu/documents/Data_Specifications/D2.7_v3.3.pdf</reference>
    <version>3.3</version>
    <author>INSPIRE Drafting Team "Data Specifications"</author>
    <creationDate>2014-04-08</creationDate>
  </Specification>
  <Requirement id="d27_rec11">
    <label>Recommendation 11: Root element of the exchange document</label>
    <description>For the exchange of spatial objects in GML, an XML document with a FeatureCollection root element from ISO 19142:2010 (WFS 2.0) should be used.</description>
    <specification ref="d27_3_3"/>
  </Requirement>
  <Requirement id="d27_12">
    <label>Requirement 12: Character encoding</label>
    <description>XML documents shall be required to be encoded using UTF-8 as character encoding.</description>
    <specification ref="d27_3_3"/>
  </Requirement>
  <Specification id="gml321">
    <label>Geography Markup Language 3.2.1</label>
    <description>The Geography Markup Language (GML) is an XML grammar for expressing geographical features. Same as ISO 19136:2007.</description>
    <reference>http://portal.opengeospatial.org/files/?artifact_id=20509</reference>
    <version>3.2.1</version>
    <author>Open Geospatial Consortium</author>
    <creationDate>2007-08-27</creationDate>
  </Specification>
  <Requirement id="gml_2_4">
    <label>GML 3.2.1 Section 2.4: GML conformance class (instance documents)</label>
    <description>GML documents claiming conformance shall conform to the rules specified in Clauses 7 to 21.</description>
    <specification ref="gml321"/>
  </Requirement> 
</Assertions>